[{"id":"6b6290b0.1a853","type":"tab","label":"Data collection flow","disabled":false,"info":""},{"id":"e3e29167.088cf8","type":"tab","label":"NN Modeling flow","disabled":false,"info":""},{"id":"1136490a.a15807","type":"tab","label":"Evaluation of models flow","disabled":false,"info":""},{"id":"59ab95b7.f411fc","type":"tab","label":"HTTP Service","disabled":false,"info":""},{"id":"a1965b52.69fd78","type":"subflow","name":"Run python","info":"","category":"advanced","in":[{"x":260,"y":340,"wires":[{"id":"7da2c01a.3148a"}]}],"out":[{"x":1400,"y":240,"wires":[{"id":"96a96097.a2d28","port":0}]},{"x":1400,"y":300,"wires":[{"id":"96a96097.a2d28","port":1}]},{"x":1400,"y":360,"wires":[{"id":"96a96097.a2d28","port":2}]}],"env":[],"icon":"node-red/arrow-in.png","status":{"x":1400,"y":500,"wires":[{"id":"18c2265b.811b52","port":0},{"id":"d485d24e.5e8c98","port":0}]}},{"id":"d1cb7ae0.934918","type":"subflow","name":"Split train test","info":"Given a ratio train:test we will split the incomming messages into a ratio of train/test samples as output\n\nNote that this could be chained to achieve several splits","category":"","in":[{"x":20,"y":160,"wires":[{"id":"aecf787b.d15a38"}]}],"out":[{"x":640,"y":80,"wires":[{"id":"aecf787b.d15a38","port":0}]},{"x":640,"y":240,"wires":[{"id":"aecf787b.d15a38","port":1}]}],"env":[{"name":"ratio","type":"str","value":"1:1"},{"name":"random","type":"bool","value":"true"}],"inputLabels":["Dataset"],"outputLabels":["Train records","Test records"],"icon":"font-awesome/fa-code-fork"},{"id":"f6d4da8d.2deed8","type":"subflow","name":"Data preprocessing","info":"","category":"nn-subflow","in":[{"x":20,"y":60,"wires":[{"id":"5f8741eb.0de67"}]}],"out":[{"x":1680,"y":480,"wires":[{"id":"657631ec.805928","port":0}]}],"env":[{"name":"trainRatio","type":"str","value":"3:1"},{"name":"testRatio","type":"str","value":"1:1"},{"name":"random","type":"bool","value":"true"}],"inputLabels":["Trigger"],"outputLabels":["Done processing data"],"icon":"font-awesome/fa-database","status":{"x":1680,"y":560,"wires":[{"id":"445738f.c38d6c8","port":0}]}},{"id":"fbd114ef.b5abb8","type":"subflow","name":"Construct NN layers for IRIS","info":"","category":"nn-subflow","in":[{"x":120,"y":100,"wires":[{"id":"e327de7a.e9e818"}]}],"out":[{"x":2000,"y":160,"wires":[{"id":"9f47d86d.bdaa","port":0}]}],"env":[],"inputLabels":["Trigger input"],"outputLabels":["Model id of the constructed model"],"icon":"font-awesome/fa-archive","status":{"x":2000,"y":280,"wires":[{"id":"e06b5b5e.f6c64","port":0}]}},{"id":"9212f77a.6e3f4","type":"subflow","name":"Train model","info":"","category":"nn-subflow","in":[{"x":40,"y":220,"wires":[{"id":"9d62ce5f.ebb3c8"},{"id":"da3e1285.edaef"},{"id":"a0ad2a64.b508f8"}]}],"out":[{"x":1200,"y":380,"wires":[{"id":"8ab80e50.9e0ab8","port":0}]}],"env":[{"name":"epochs","type":"num","value":"40"},{"name":"batchesPerEpoch","type":"str","value":"6"},{"name":"valBatchesPerEpoch","type":"str","value":"6"}],"inputLabels":["modelId"],"outputLabels":["modelId together with accuracy of the validation"],"icon":"node-red/cog.png","status":{"x":1200,"y":420,"wires":[{"id":"f2f44d74.ad72a","port":0}]}},{"id":"1777bb00.010975","type":"subflow","name":"Model dashboard","info":"","category":"dashboard","in":[{"x":60,"y":660,"wires":[{"id":"e6dc9418.8f9638"},{"id":"2cd37f1c.40ae2"}]}],"out":[{"x":1680,"y":400,"wires":[{"id":"63f9953a.36396c","port":0}]},{"x":1700,"y":1240,"wires":[{"id":"6472d8e4.609828","port":0}]}],"env":[],"inputLabels":["Evaluation data"],"outputLabels":["Load model action","View dataset action"],"icon":"font-awesome/fa-television"},{"id":"524deb7f.0b2fbc","type":"subflow","name":"Compute dataset meta information","info":"This subflow generates meta data of a given dataset (the dataset has to be formated as comma separated values)\n\nThe following meta-data are computed:\n* Label counts\n* Feature std\n* Feature mean\n* Feature unique values\n* Feature isLabel\n* Feature isFeature\n* Feature type\n* Feature max\n* Feature min\n* Feature avg","category":"","in":[{"x":60,"y":80,"wires":[{"id":"2df85ce4.e252ec"}]}],"out":[{"x":2040,"y":80,"wires":[{"id":"823cffa1.064b8","port":0}]}],"env":[{"name":"labels","type":"json","value":"[\"species\",\"setosa\",\"versicolor\",\"virginica\"]"},{"name":"features","type":"json","value":"[\"sepal_length\",\"sepal_width\",\"petal_length\",\"petal_width\"]"}],"icon":"font-awesome/fa-barcode"},{"id":"5c1978bb.949448","type":"subflow","name":"Feature to numeric","info":"","category":"nn-subflow","in":[{"x":20,"y":80,"wires":[{"id":"859b3e69.f96298"}]}],"out":[{"x":1440,"y":80,"wires":[{"id":"e2e5232.9ebc66","port":0}]}],"env":[],"status":{"x":440,"y":140,"wires":[{"id":"3f2fd475.992dcc","port":0}]}},{"id":"a27141c0.ce8e7","type":"subflow","name":"Construct NN layers for dogs vs cats","info":"","category":"nn-subflow","in":[{"x":100,"y":80,"wires":[{"id":"e87dc2e9.ae9268"}]}],"out":[{"x":2280,"y":160,"wires":[{"id":"f87d567b.dc0f78","port":0}]}],"env":[],"icon":"font-awesome/fa-archive","status":{"x":2280,"y":260,"wires":[{"id":"4739df6a.4741f","port":0}]}},{"id":"f69da6e8.753218","type":"subflow","name":"Read meta-data","info":"Given a dataset filename (e.g. \"datasetname.data\") this subflow will read the \"datasetname.meta\" file and return the infomration as a json object","category":"","in":[{"x":60,"y":80,"wires":[{"id":"ed93d16e.a75cf8"}]}],"out":[{"x":1020,"y":80,"wires":[{"id":"82c8b32a.2f4e5","port":0}]}],"env":[]},{"id":"f49996b9.5975f8","type":"subflow","name":"Make test predictions","info":"","category":"","in":[{"x":20,"y":80,"wires":[{"id":"963c97fe.901fa8"}]}],"out":[{"x":1220,"y":180,"wires":[{"id":"c9bdab49.8970d8","port":0}]}],"env":[]},{"id":"e6a2d29.a39f93","type":"subflow","name":"Read dataset batches","info":"","category":"","in":[{"x":40,"y":80,"wires":[{"id":"ed4e8e9a.cd13a"}]}],"out":[{"x":940,"y":80,"wires":[{"id":"54a129ab.8d1a58","port":0}]}],"env":[]},{"id":"1aa75980.0bd64f","type":"ui_base","theme":{"name":"theme-dark","lightTheme":{"default":"#0094CE","baseColor":"#0094CE","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":true,"reset":false},"darkTheme":{"default":"#097479","baseColor":"#0e741b","baseFont":"Arial,Arial,Helvetica,sans-serif","edited":true,"reset":false},"customTheme":{"name":"Untitled Theme 1","default":"#4B7930","baseColor":"#4B7930","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"},"themeState":{"base-color":{"default":"#097479","value":"#0e741b","edited":true},"page-titlebar-backgroundColor":{"value":"#0e741b","edited":false},"page-backgroundColor":{"value":"#111111","edited":false},"page-sidebar-backgroundColor":{"value":"#000000","edited":false},"group-textColor":{"value":"#16b82b","edited":false},"group-borderColor":{"value":"#555555","edited":false},"group-backgroundColor":{"value":"#333333","edited":false},"widget-textColor":{"value":"#eeeeee","edited":false},"widget-backgroundColor":{"value":"#0e741b","edited":false},"widget-borderColor":{"value":"#333333","edited":false},"base-font":{"value":"Arial,Arial,Helvetica,sans-serif"}},"angularTheme":{"primary":"indigo","accents":"blue","warn":"red","background":"grey"}},"site":{"name":"Machine learning overview","hideToolbar":"false","allowSwipe":"false","lockMenu":"true","allowTempTheme":"true","dateFormat":"DD/MM/YYYY","sizes":{"sx":48,"sy":48,"gx":6,"gy":6,"cx":6,"cy":6,"px":0,"py":0}}},{"id":"99bf0fda.6ac7d","type":"ui_tab","z":"","name":"Training","icon":"fa-tripadvisor","order":3,"disabled":false,"hidden":false},{"id":"72829ecd.caa568","type":"ui_group","z":"","name":"Training epochs","tab":"99bf0fda.6ac7d","order":3,"disp":true,"width":"12","collapse":false},{"id":"2c8034f0.0682a4","type":"ui_group","z":"","name":"Model Evaluation","tab":"99bf0fda.6ac7d","order":4,"disp":true,"width":"12","collapse":false},{"id":"ae19d163.945098","type":"ui_tab","z":"","name":"Data overview","icon":"fa-database","order":2,"disabled":false,"hidden":false},{"id":"204b4daf.75747a","type":"ui_group","z":"","name":"Datasource versions","tab":"ae19d163.945098","order":1,"disp":true,"width":"7","collapse":false},{"id":"7872e5c.f152c1c","type":"ui_group","z":"","name":"Training datasets","tab":"ae19d163.945098","order":2,"disp":true,"width":"7","collapse":false},{"id":"5b54f152.aed92","type":"ui_group","z":"","name":"Testing datasets","tab":"ae19d163.945098","order":2,"disp":true,"width":"7","collapse":false},{"id":"fbf8d3c2.ce17f","type":"ui_group","z":"","name":"Available models","tab":"99bf0fda.6ac7d","order":1,"disp":true,"width":"4","collapse":true},{"id":"68e77f6a.128f1","type":"ui_spacer","name":"spacer","group":"72829ecd.caa568","order":2,"width":1,"height":"2"},{"id":"c6bd7ad.116d288","type":"ui_group","z":"","name":"Validation datasets","tab":"ae19d163.945098","order":4,"disp":true,"width":"7","collapse":false},{"id":"a0e3d641.64ac9","type":"ui_group","z":"","name":"Dataset (top 100 samples)","tab":"ae19d163.945098","order":5,"disp":true,"width":"28","collapse":false},{"id":"16e8d9be.b05f96","type":"ui_group","z":"","name":"Dataset statistics","tab":"ae19d163.945098","order":6,"disp":true,"width":"28","collapse":false},{"id":"21a445e8.0f8b8a","type":"ui_spacer","name":"spacer","group":"16e8d9be.b05f96","order":6,"width":1,"height":1},{"id":"8bc6d58f.90441","type":"ui_tab","z":"","name":"Flappy birds","icon":"dashboard","order":3,"disabled":false,"hidden":false},{"id":"84c14880.1718d8","type":"ui_group","z":"","name":"Flappy Models","tab":"8bc6d58f.90441","disp":true,"width":"6","collapse":false},{"id":"96a96097.a2d28","type":"exec","z":"a1965b52.69fd78","command":"python3 -c","addpay":true,"append":"","useSpawn":"false","timer":"","oldrc":false,"name":"Run python code","x":630,"y":340,"wires":[["1e2fbed2.7500f9"],[],["c9d19c2f.9bc298"]]},{"id":"7da2c01a.3148a","type":"function","z":"a1965b52.69fd78","name":"Escape string","func":"payload = msg.payload\n          .split('\\\\').join('\\\\\\\\')\n          .split('\"').join('\\\\\"');\nreturn {\n    payload: '\"' + payload + '\"'\n};","outputs":1,"noerr":0,"x":420,"y":340,"wires":[["96a96097.a2d28","18c2265b.811b52"]]},{"id":"18c2265b.811b52","type":"template","z":"a1965b52.69fd78","name":"Running status","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"Running...","output":"str","x":640,"y":500,"wires":[[]]},{"id":"d485d24e.5e8c98","type":"function","z":"a1965b52.69fd78","name":"","func":"var res = {\n    payload: 'Error: ' + msg.payload.code\n}\nif (msg.payload.code === 0)\n    res.payload = msg.payload.status;\nreturn res;","outputs":1,"noerr":0,"x":1250,"y":440,"wires":[[]]},{"id":"c9d19c2f.9bc298","type":"join","z":"a1965b52.69fd78","name":"","mode":"custom","build":"merged","property":"payload","propertyType":"msg","key":"payload.","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1070,"y":440,"wires":[["d485d24e.5e8c98"]]},{"id":"1e2fbed2.7500f9","type":"template","z":"a1965b52.69fd78","name":"Done status","field":"payload","fieldType":"msg","format":"json","syntax":"plain","template":"{ \"status\": \"Success!\" }","output":"json","x":870,"y":440,"wires":[["c9d19c2f.9bc298"]]},{"id":"6a0dc694.30a1e","type":"subflow:d1cb7ae0.934918","z":"f6d4da8d.2deed8","name":"","env":[{"name":"ratio","type":"bool","value":"false"},{"name":"random","type":"bool","value":"false"}],"x":580,"y":200,"wires":[["303ae3c6.d02fe4"],["6bd82c1a.b27374"]]},{"id":"aecf787b.d15a38","type":"function","z":"d1cb7ae0.934918","name":"Split message","func":"var ratio = (msg.ratio || env.get('ratio')).split(':').map(r => parseInt(r));\nvar random = msg.random || env.get('random');\nvar series = flow.get('series') || ratio;\nvar takenSeries = [];\nif (!series.find(s => s > 0)) series = ratio;\nvar msgs = [...series].map(() => null);\nfor (var i = 0; i < series.length; i++) {\n    let j = i;\n    if (random) {\n        j = parseInt(Math.random() * series.length);\n        while(takenSeries.indexOf(j) !== -1)\n            j = parseInt(Math.random() * series.length);\n    }\n    takenSeries.push(j);\n    if (series[j] > 0) {\n        series[j]--;\n        msgs[j] = msg;\n        break;\n    }\n}\nif (msg.eof) {\n    return msgs.map(m => m || {\n        ...msg,\n        payload: '',\n        eof: true\n    });\n}\nflow.set('series', series);\nreturn msgs;","outputs":2,"noerr":0,"x":380,"y":160,"wires":[[],[]]},{"id":"45ba2014.97d038","type":"inject","z":"e3e29167.088cf8","name":"Kör","topic":"","payload":"","payloadType":"str","repeat":"","crontab":"","once":false,"onceDelay":"1","x":250,"y":120,"wires":[["b00cee40.76d54"]]},{"id":"769341f0.bc40d8","type":"stream-read-file","z":"f6d4da8d.2deed8","name":"load data stream","filename":"","ignoreTopNLines":"1","maxLines":"","ignoreBlankLines":true,"x":870,"y":120,"wires":[["fb70a7d4.d1e958"]]},{"id":"4e0c7f64.dd0c7","type":"stream-write-file","z":"f6d4da8d.2deed8","name":"store train data stream","filename":"","ignoreTopNLines":"","ignoreBlankLines":true,"x":1220,"y":200,"wires":[["4aa4a6df.6756f8"]]},{"id":"3ccadbfa.e6cf74","type":"stream-write-file","z":"f6d4da8d.2deed8","name":"store test data stream","filename":"","ignoreTopNLines":"","ignoreBlankLines":true,"x":1220,"y":260,"wires":[["6de0517f.8cf07"]]},{"id":"86000a0b.367fc8","type":"compile-model","z":"a27141c0.ce8e7","name":"","loss":"categoricalCrossentropy","optimizer":"adam","metrics":["accuracy"],"x":1860,"y":160,"wires":[["f539d255.b39958","f87d567b.dc0f78"]]},{"id":"c39afae8.d82cf8","type":"fit-model","z":"9212f77a.6e3f4","name":"","x":760,"y":320,"wires":[["dce28e65.c2659"],["8ab80e50.9e0ab8"]]},{"id":"95b8bdc4.22c9b","type":"inject","z":"e3e29167.088cf8","name":"Kör","topic":"","payload":"","payloadType":"str","repeat":"","crontab":"","once":false,"onceDelay":"1","x":250,"y":180,"wires":[["4459470a.cb7458"]]},{"id":"705f6e4a.434da","type":"debug","z":"e3e29167.088cf8","name":"Accuracy of the validated model","active":false,"tosidebar":true,"console":false,"tostatus":true,"complete":"{\t   \"val_acc\": $round(payload.history.val_acc[\t       $count(payload.history.val_acc)-1\t    ], 2),\t   \"acc\": $round(payload.history.acc[\t       $count(payload.history.acc)-1\t\t   ], 2),\t   \"val_loss\": $round(payload.history.val_loss[\t       $count(payload.history.val_loss)-1\t\t   ], 2),\t   \"loss\": $round(payload.history.loss[\t       $count(payload.history.loss)-1\t\t   ], 2),\t   \"modelId\": modelId,\t   \"history\": payload.history\t}","targetType":"jsonata","x":1450,"y":180,"wires":[]},{"id":"18364714.f91a49","type":"dense-layer","z":"a27141c0.ce8e7","name":"Input-layer","activation":"sigmoid","units":100,"x":690,"y":200,"wires":[["237a47e7.7d3de8"]]},{"id":"be326383.7e033","type":"stream-read-file","z":"e6a2d29.a39f93","name":"data stream","filename":"","ignoreTopNLines":"1","maxLines":"","ignoreBlankLines":true,"x":410,"y":80,"wires":[["12d6f06b.3e8a8"]]},{"id":"54a129ab.8d1a58","type":"function","z":"e6a2d29.a39f93","name":"topic batch","func":"let instances = flow.get(msg.topic + 'instances') || [];\ninstances.push({ ...msg });\nif (instances.length >= msg.config.batchSize) {\n    flow.set(msg.topic + 'instances', []);\n    instances.sort((a,b) => a.lineNr - b.lineNr);\n    instances.forEach(instance => {\n        try {\n            const features = instance.payload.split(',');\n            instance.payload = features.reduce((g, v, i) => ({ ...g, [instance.features[i].name]: v }), {});\n            node.send(instance);\n        } catch (e) {\n            console.log(e, instance);\n        }\n    });\n    instances = [];\n}\nflow.set(msg.topic + 'instances', instances);\n","outputs":1,"noerr":0,"x":810,"y":80,"wires":[[]]},{"id":"ff9a0199.decd4","type":"function","z":"9212f77a.6e3f4","name":"Repeater","func":"if (msg.payload.history !== undefined) return;\nif (msg.payload.epoch > msg.payload.epochs) {\n    // if (msg.payload.history)\n    return;\n}\nreturn msg;","outputs":1,"noerr":0,"x":1160,"y":220,"wires":[["d70ce831.c21188","9bea5ddb.cd4928"]]},{"id":"fb70a7d4.d1e958","type":"function","z":"f6d4da8d.2deed8","name":"Numeric to one hot","func":"const csvLine = msg.payload.split(',');\nconst label = csvLine[csvLine.length-1];\nconst labels = Object.keys(flow.get('meta').labels);\nconst labelCount = labels.length;\n\nfor (var i = 0; i < labelCount; i++) {\n    const onezero = 0 + (labels.indexOf(label) === i);\n    if (i === 0) {\n        csvLine[csvLine.length-1] = (onezero);\n    } else {\n        csvLine.push((onezero));\n    }\n}\nmsg.labels = labels;\nmsg.payload = csvLine.join(',');\nreturn msg;","outputs":1,"noerr":0,"x":1130,"y":120,"wires":[["766b9adb.eaf624"]]},{"id":"1931990b.ba9e37","type":"file in","z":"f6d4da8d.2deed8","name":"load meta","filename":"","format":"utf8","chunk":false,"sendError":false,"encoding":"none","x":760,"y":60,"wires":[["97a875aa.b008"]]},{"id":"768d2d24.1ed34c","type":"function","z":"f6d4da8d.2deed8","name":"Store distinct labels","func":"const labels = Object.keys(msg.payload.labels);\nconst featureNames = msg.payload.features.filter(f => !f.isLabel).map(f => f.name);\nflow.set('meta', msg.payload);\nmsg.payload = featureNames.concat(labels).join(',');\nreturn msg;","outputs":1,"noerr":0,"x":1110,"y":60,"wires":[["e1a67c15.d3c8"]]},{"id":"47b5e372.35a6fc","type":"dense-layer","z":"a27141c0.ce8e7","name":"Hidden-layer-1","activation":"relu","units":100,"x":880,"y":320,"wires":[["c4e85604.72708"]]},{"id":"a61eb500.c57b58","type":"link out","z":"e3e29167.088cf8","name":"model-trained","links":["9dc9bc28.1e9ea","4f072a51.0559fc"],"x":1335,"y":240,"wires":[]},{"id":"9dc9bc28.1e9ea","type":"link in","z":"e3e29167.088cf8","name":"predict-model","links":["a61eb500.c57b58"],"x":275,"y":300,"wires":[["361fbd83.e3014a"]]},{"id":"c084096d.f96b5","type":"subflow:f6d4da8d.2deed8","z":"e3e29167.088cf8","name":"","env":[],"x":700,"y":120,"wires":[["fec59e5e.ce8938"]]},{"id":"8fbe60fe.09d2e8","type":"comment","z":"e3e29167.088cf8","name":"TODO","info":"## NN nodes\n - ~~Create training overview page~~\n   - ~~Loss & accuracy plot~~\n   - ~~Confusion matrix~~\n   - ~~Demo predictions~~\n   - ~~List available models~~\n - (Create variable inputs for NN nodes)\n - ~~Separate train and test data~~\n - ~~Make stream-read-file node~~\n - ~~Make stream-write-file node~~\n - ~~Make dense-layer node~~\n - ~~Make compile-model node~~\n - ~~Make sequential node~~\n - ~~Make predictor NN node~~\n - ~~Make store model node~~\n - ~~Store evaluation data for model~~\n - ~~Make test/validation batch size different from train sizes~~\n - ~~Make list models node~~\n - ~~Add status messages while training / preprocessing the data~~\n \n## Presentation\n - Make several instances of nodered environment (docker-containers)\n\n## Documentation\n - Make description of stream-read-file node\n - Make description of stream-write-file node\n - Make description of dense-layer node\n - Make description of compile-model node\n - Make description of fit-model node\n - Make description of sequential node\n - Make description of predict node","x":2430,"y":500,"wires":[]},{"id":"cc93c7d2.38a64","type":"subflow:fbd114ef.b5abb8","z":"e3e29167.088cf8","name":"Skapa det neurala nätverket (dbl clicka för mer info)","env":[],"x":800,"y":180,"wires":[["92aa6f25.1c727"]]},{"id":"6b04c308.fea9ec","type":"sequential-network","z":"a27141c0.ce8e7","name":"","modelId":"dogs_and_cats","x":370,"y":160,"wires":[["ffbe5cb5.6e78d"]]},{"id":"44170f92.6b20e","type":"dense-layer","z":"a27141c0.ce8e7","name":"Output-layer","activation":"softmax","units":null,"x":1630,"y":200,"wires":[["86000a0b.367fc8"]]},{"id":"f2f44d74.ad72a","type":"status","z":"9212f77a.6e3f4","name":"fit-model status","scope":["c39afae8.d82cf8","da3e1285.edaef"],"x":960,"y":420,"wires":[[]]},{"id":"4739df6a.4741f","type":"status","z":"a27141c0.ce8e7","name":"","scope":["f539d255.b39958"],"x":2100,"y":260,"wires":[[]]},{"id":"f539d255.b39958","type":"function","z":"a27141c0.ce8e7","name":"Status complete","func":"node.status({\n    \"fill\": \"green\",\n    \"shape\": \"dot\",\n    \"text\": \"NN Model constructed\"\n});","outputs":1,"noerr":0,"x":2080,"y":220,"wires":[[]]},{"id":"766b9adb.eaf624","type":"link out","z":"f6d4da8d.2deed8","name":"one hot encoding finnished","links":["2080b706.42f87"],"x":1335,"y":120,"wires":[]},{"id":"2080b706.42f87","type":"link in","z":"f6d4da8d.2deed8","name":"start split datastream","links":["766b9adb.eaf624"],"x":95,"y":200,"wires":[["dbcc40a8.2999","30f7f3e4.84f204"]]},{"id":"8515068c.d958e","type":"function","z":"f6d4da8d.2deed8","name":"complete status","func":"const inst = flow.get('instances');\nflow.set('instances', 0);\nnode.status({\n    \"fill\": \"green\",\n    \"shape\": \"dot\",\n    \"text\": inst + \" instances processed!\"\n});","outputs":1,"noerr":0,"x":1520,"y":520,"wires":[[]]},{"id":"445738f.c38d6c8","type":"status","z":"f6d4da8d.2deed8","name":"","scope":["8515068c.d958e","dbcc40a8.2999"],"x":1540,"y":560,"wires":[[]]},{"id":"dbcc40a8.2999","type":"function","z":"f6d4da8d.2deed8","name":"process status","func":"const inst = flow.get('instances') || 0;\nflow.set('instances', 1 + inst)\nif (inst % 123 === 0) {\n    node.status({\n        \"fill\": \"yellow\",\n        \"shape\": \"dot\",\n        \"text\": (inst + 1) + \" instances processed...\"\n    });\n}\nreturn msg;","outputs":1,"noerr":0,"x":260,"y":240,"wires":[[]]},{"id":"c5491b52.26284","type":"join","z":"f6d4da8d.2deed8","name":"wait for all streams to finnish","mode":"custom","build":"string","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"3","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1260,"y":480,"wires":[["8515068c.d958e","657631ec.805928"]]},{"id":"30341259.a5c506","type":"ui_chart","z":"1777bb00.010975","name":"accuracy chart","group":"72829ecd.caa568","order":1,"width":0,"height":0,"label":"accuracy chart","chartType":"line","legend":"true","xformat":"ss","interpolate":"bezier","nodata":"","dot":false,"ymin":"","ymax":"","removeOlder":1,"removeOlderPoints":"1","removeOlderUnit":"1","cutout":0,"useOneColor":false,"colors":["#ff7f0e","#ffb571","#0080c0","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5"],"useOldStyle":false,"outputs":1,"x":1120,"y":480,"wires":[[]]},{"id":"5bc2763f.121c98","type":"template","z":"1777bb00.010975","name":"plot accuracy graph data","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"[\n    {\n        \"series\": [\n            \"Validation Accuracy\",\n            \"Accuracy\"\n        ],\n        \"data\": [\n            [\n                {{payload.history.val_acc}}\n            ],\n            [\n                {{payload.history.acc}}\n            ]\n        ],\n        \"labels\": [\n            {{payload.epoch}}\n        ]\n    }\n]","output":"json","x":630,"y":480,"wires":[["30341259.a5c506"]]},{"id":"46146652.f742d8","type":"template","z":"1777bb00.010975","name":"plot loss graph data","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"[\n    {\n        \"series\": [\n            \"Validation Loss\",\n            \"Loss\"\n        ],\n        \"data\": [\n            [\n                {{payload.history.val_loss}}\n            ],\n            [\n                {{payload.history.loss}}\n            ]\n        ],\n        \"labels\": [\n            {{payload.epoch}}\n        ]\n    }\n]","output":"json","x":620,"y":520,"wires":[["3ef0552d.be2452"]]},{"id":"3ef0552d.be2452","type":"ui_chart","z":"1777bb00.010975","name":"loss chart","group":"72829ecd.caa568","order":3,"width":0,"height":0,"label":"loss chart","chartType":"line","legend":"true","xformat":"ss","interpolate":"bezier","nodata":"","dot":false,"ymin":"","ymax":"","removeOlder":1,"removeOlderPoints":"1","removeOlderUnit":"1","cutout":0,"useOneColor":false,"colors":["#1f77b4","#aec7e8","#ff7f0e","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5"],"useOldStyle":false,"outputs":1,"x":1100,"y":520,"wires":[[]]},{"id":"4fe81154.a2f98","type":"ui_template","z":"1777bb00.010975","group":"2c8034f0.0682a4","name":"Confusion matrix","order":3,"width":"12","height":"5","format":"<div>\n    <h2>Confusion matrix</h2>\n    <table style=\"width: 100%;\">\n        <tr>\n            <td></td>\n            <td ng-repeat=\"(val, c) in msg.payload.labels track by $index\">\n                {{val}}\n            </td>\n        </tr>\n        <tr ng-repeat=\"row in msg.payload.confusionMatrix track by $index\"  ng-init=\"rowIndex = $index\">\n            <td ng-if=\"$index === rowIndex\" ng-repeat=\"(val, c) in msg.payload.labels track by $index\">{{val}}</td>\n            <td ng-repeat=\"col in row track by $index\"\n                ng-style=\"{'padding': '10px', 'background-color': 'rgba(0, ' + (255 * col / (msg.payload.classes.length / msg.payload.labels.length)) + ', 0, ' + (col / msg.payload.classes.length) + ')'}\">\n                {{col}}\n            </td>\n        </tr>\n    </table>\n</div>","storeOutMessages":true,"fwdInMessages":true,"templateScope":"local","x":610,"y":600,"wires":[[]]},{"id":"98120366.ef1f38","type":"ui_gauge","z":"1777bb00.010975","name":"","group":"2c8034f0.0682a4","order":2,"width":"0","height":"0","gtype":"gage","title":"Validation Accuracy","label":"","format":"{{value | number:2}} %","min":0,"max":"1","colors":["#ca3838","#e6e600","#00b500"],"seg1":"","seg2":"","x":1130,"y":560,"wires":[]},{"id":"563c1c8.2f64b64","type":"function","z":"1777bb00.010975","name":"Get current val accuracy","func":"// const val_accs = msg.payload.history.val_acc;\nconst value = msg.payload.accuracy; // || val_accs[val_accs.length-1];\nif (value !== undefined) {\n    msg.payload = value;\n    return msg;\n}","outputs":1,"noerr":0,"x":630,"y":560,"wires":[["98120366.ef1f38"]]},{"id":"e6dc9418.8f9638","type":"function","z":"1777bb00.010975","name":"UI Separator","func":"const msgData = [\n    'name',\n    ['history', 'epoch'],\n    'accuracy',\n    ['confusionMatrix', 'labels'],\n    ['samples', 'labels'],\n    ['architecture', 'layerWeights'],\n    ['dataset', 'features'],\n    ['dataset', 'labels'],\n    'dataset'\n];\n\nreturn msgData.map((attrs) => {\n    if (attrs instanceof Array) {\n        const filteredAttr = attrs.filter(attr => {\n            const exists = msg.payload[attr] !== undefined;\n            if (exists) {\n                context.set(attr, msg.payload[attr]);\n            } else {\n                msg.payload[attr] = context.get(attr);\n            }\n            return msg.payload[attr] !== undefined;\n        });\n        if (filteredAttr.length === attrs.length) {\n            return msg;\n        }\n    } else if (msg.payload[attrs] !== undefined) {\n        return msg;\n    }\n    return null;\n});","outputs":9,"noerr":0,"x":310,"y":740,"wires":[["79923d86.629fc4","afe37866.f567c8","55c8a7bd.012c48"],["46146652.f742d8","5bc2763f.121c98"],["563c1c8.2f64b64"],["4fe81154.a2f98"],["1d796ff7.7d741"],["769a4fa1.7c9a5"],["6217e4fd.d76f2c"],["fcbeeab3.6858e8","52db8b58.153f74"],["9a023c06.5624","5de7914f.d44e9","6dd31469.8abd0c","711d9ea5.f0d188","2cd37f1c.40ae2"]],"inputLabels":["UI data input"],"outputLabels":["Model name heading (name string)","Graph data (history object)","Validation Accuracy (accuracy float)","Confusion matrix data (confusionMatrix object)","Sample data (samples object)","Feature statistics (feature object)","Labels statistics (labels object)","Dataset name (dataset string)","Model Parameters"]},{"id":"3db1a995.57b536","type":"comment","z":"e3e29167.088cf8","name":"Model tränings process","info":" - Data preprocessing\n   - formatera data labels till one-hot-vektorer\n   - Dela in datasetet till träning och test data\n   - Visualisera data i [UI-dashboard](http://10.15.1.134:1881/ui)\n - Att bygga ett Neuralt nätverk\n   - Skapa en sequence model\n   - Lägg till neurala nätverkslager till modellen\n   - Kompilera modellen med en optimerare och vilka mätningar som ska göras under träning\n - Träna modellen\n   - Test- och träningsdatat skickas in i modellen\n   - Iterera genom datat flera gånger genom olika epoker för att låta vikterna på nätverket konvergera/stabiliseras\n   - Utvärdera resultatet och lagra modellen på disk\n   - Visualisera modellen i [UI-dashboard](http://10.15.1.134:1881/ui)\n","x":280,"y":80,"wires":[]},{"id":"3e228b40.032f5c","type":"save-model","z":"e3e29167.088cf8","name":"Spara modellen","filename":"","modelId":"","x":1180,"y":300,"wires":[["962a6d05.050f1","22eedf66.fa6088"]]},{"id":"962a6d05.050f1","type":"debug","z":"e3e29167.088cf8","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"filename","targetType":"msg","x":1400,"y":300,"wires":[]},{"id":"122def67.8255f1","type":"http request","z":"6b6290b0.1a853","name":"iris.data","method":"GET","ret":"txt","paytoqs":false,"url":"https://gist.githubusercontent.com/curran/a08a1080b88344b0c8a7/raw/d546eaee765268bf2f487608c537c05e22e4b221/iris.csv","tls":"","proxy":"","authType":"basic","x":220,"y":140,"wires":[["95a6a970.7a5a3"]]},{"id":"75e19619.e7c948","type":"inject","z":"6b6290b0.1a853","name":"Kör","topic":"","payload":"","payloadType":"str","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":90,"y":140,"wires":[["122def67.8255f1"]]},{"id":"95150de6.1d79b","type":"file","z":"6b6290b0.1a853","name":"lagra iris.data","filename":"","appendNewline":true,"createDir":true,"overwriteFile":"true","encoding":"none","x":700,"y":140,"wires":[["3b4661be.fe505e"]]},{"id":"9d96b0fb.272","type":"function","z":"524deb7f.0b2fbc","name":"count distinct","func":"const records = msg.payload;\nconst labels = {};\nlet labelNames = msg.labels || env.get('labels');\nif (!Array.isArray(labelNames)) {\n    labelNames = Object.keys(labelNames);\n}\nrecords.forEach(r => {\n    labelNames.forEach(label => {\n        if (r[label] && labelNames.length > 1) {\n            labels[label] = (labels[label] || 0) + 1;\n        } else if (r[label]) {\n            labels[r[label]] = (labels[r[label]] || 0) + 1;\n        }\n    });\n});\nmsg.labels = labels;\nmsg.payload = { labels }; // Object.keys(distinct).join('\\n');\nreturn msg;","outputs":1,"noerr":0,"x":550,"y":80,"wires":[["823cffa1.064b8"]],"inputLabels":["store data"],"outputLabels":["store data"]},{"id":"cd987483.6cca98","type":"comment","z":"6b6290b0.1a853","name":"Hämta iris data","info":"Detta \"flow\" hämtar iris datasetet ifrån github repo via ett https anrop.\n\nGå till [iris-dataset](https://gist.githubusercontent.com/curran/a08a1080b88344b0c8a7/raw/d546eaee765268bf2f487608c537c05e22e4b221/iris.csv) för att see datasetet själv ;)","x":90,"y":100,"wires":[]},{"id":"2a4ed24a.934ede","type":"predict","z":"1136490a.a15807","name":"","x":870,"y":500,"wires":[["ea5c430f.abc28"]]},{"id":"47d9a8f9.fa8268","type":"function","z":"1136490a.a15807","name":"Välj egna predictions att testa","func":"const data = [\n    [5.9,3.0,5.1,1.8], // <- should be 1 (e.g [0,1,0])\n    [5.9,3.0,1.1,0]\n];\nmsg.modelId = msg.modelId || 'f691f474.9a2378';\nfor (var i = 0; i < data.length; i++) {\n    msg.payload = data[i];\n    node.send(msg);\n}","outputs":1,"noerr":0,"x":650,"y":500,"wires":[["2a4ed24a.934ede"]]},{"id":"ea5c430f.abc28","type":"debug","z":"1136490a.a15807","name":"Log","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":1030,"y":500,"wires":[]},{"id":"7cda97a3.417ab8","type":"inject","z":"1136490a.a15807","name":"Kör","topic":"","payload":"","payloadType":"str","repeat":"","crontab":"","once":false,"onceDelay":"1","x":140,"y":500,"wires":[["c336b36a.b83cf"]]},{"id":"daaa1498.7e6cb8","type":"load-model","z":"1136490a.a15807","name":"","filename":"","modelId":"","x":990,"y":240,"wires":[["617611c6.86bc3"]]},{"id":"6f967ce8.dbc974","type":"function","z":"f49996b9.5975f8","name":"Make prediction data","func":"\nif (msg.lineNr === 0) {\n    msg.payload = msg.payload.split(',');\n    flow.set('heading', msg.payload);\n} else {\n    const heading = flow.get('heading');\n    const meta = msg.meta;\n    const data = msg.payload.split(',');\n    const y = data.filter((f, i) => {\n        const name = heading[i];\n        const feature = meta.features.find(feature => feature.name === name);\n        return feature.isLabel;\n    }).map(f => parseFloat(f));\n    const x = data.reduce((g, v, i) => {\n        const name = heading[i];\n        const feature = meta.features.find(feature => feature.name === name);\n        if (!feature.isFeature) return g;\n        return {\n            ...g,\n            [name]: v\n        };\n    }, {});\n    \n    msg.payload = x;\n    msg.y = y;\n    msg.trueClass = y.indexOf(1);\n    msg.features = msg.meta.features;\n    return msg;\n}","outputs":1,"noerr":0,"x":180,"y":180,"wires":[["5b614b0.41a14b4"]]},{"id":"ccdf3573.6ac368","type":"predict","z":"f49996b9.5975f8","name":"","x":850,"y":180,"wires":[["c9bdab49.8970d8"]]},{"id":"c33e4e41.66501","type":"subflow:1777bb00.010975","z":"1136490a.a15807","name":"","env":[],"x":730,"y":320,"wires":[["daaa1498.7e6cb8"],["516d21c6.e1cb98"]]},{"id":"91fa0c00.4bc688","type":"link out","z":"1136490a.a15807","name":"Model Predictions","links":["5b04766a.ecbff8"],"x":1875,"y":240,"wires":[]},{"id":"c9bdab49.8970d8","type":"function","z":"f49996b9.5975f8","name":"Collect predictions","func":"const n = msg.payload.prediction.length;\nconst confusionMatrix = context.get('confusion-matrix') || Array(n).fill(0).map(a => Array(n).fill(0));\nconst samples = context.get('samples') || [];\n\nconst label = {\n    actual: msg.trueClass,\n    pred: msg.payload.class\n};\nsamples.push({\n    feature: msg.payload.feature,\n    label\n});\nconfusionMatrix[label.actual][label.pred] += 1;\nif (msg.eof) {\n    const heading = flow.get('heading');\n    const featureHeading = heading.slice(0, samples[0].feature.length);\n    const labelHeading = {\n        actual: \"Actual species\",\n        pred: \"Predicted species\"\n    }; // heading.slice(samples[0].feature.length, heading.length);\n    const sampleHeading = {\n        feature: featureHeading,\n        label: labelHeading\n    };\n    msg.payload = {\n        labels: msg.meta.labels,\n        confusionMatrix,\n        samples: [sampleHeading].concat(samples),\n        accuracy: samples.filter(s => s.label.actual === s.label.pred).length / samples.length\n    };\n    context.set('samples', null);\n    context.set('confusion-matrix', null);\n    return msg;\n} else {\n    context.set('samples', samples);\n    context.set('confusion-matrix', confusionMatrix);\n}","outputs":1,"noerr":0,"x":1050,"y":180,"wires":[[]]},{"id":"afe37866.f567c8","type":"glob","z":"1777bb00.010975","name":"","pattern":"models/*","oneMsgPerMatch":false,"x":580,"y":380,"wires":[["dc5e2226.b377e8"]]},{"id":"c336b36a.b83cf","type":"load-model","z":"1136490a.a15807","name":"","filename":"models/iris","modelId":"iris","x":340,"y":500,"wires":[["47d9a8f9.fa8268"]]},{"id":"5b04766a.ecbff8","type":"link in","z":"1136490a.a15807","name":"Make fInal Evaluation","links":["11bde4d6.cbcc0b","70be765e.be25b8","91fa0c00.4bc688","34c1c110.053d2e"],"x":515,"y":320,"wires":[["c33e4e41.66501"]]},{"id":"55c8a7bd.012c48","type":"list-models","z":"1777bb00.010975","name":"","x":590,"y":340,"wires":[[]]},{"id":"eca10a06.d149b8","type":"ui_template","z":"1777bb00.010975","group":"fbf8d3c2.ce17f","name":"List buttons","order":2,"width":"4","height":"15","format":"<div style=\"margin: -3px -6px;\">\n    <div ng-repeat=\"v in msg.payload.models track by $index\">\n        <md-button ng-click=\"send({filename: v});\" style=\"width: 100%; margin: 0;border-radius: 0;\" ng-class=\"{'md-primary': v.substring(v.lastIndexOf('/') + 1, v.length) === msg.payload.name}\">\n            {{v.substring(v.lastIndexOf('/'), v.length)}}\n        </md-button>\n    </div>\n</div>","storeOutMessages":false,"fwdInMessages":false,"templateScope":"local","x":1110,"y":400,"wires":[["63f9953a.36396c"]]},{"id":"63f9953a.36396c","type":"function","z":"1777bb00.010975","name":"","func":"msg.payload = {};\nreturn msg;","outputs":1,"noerr":0,"x":1570,"y":400,"wires":[[]]},{"id":"87bd8eb0.8cabc","type":"function","z":"1136490a.a15807","name":"Konvertera data informationen","func":"const name = msg.name || context.get('evaluationName') || 'test';\ncontext.set('evaluationName', name);\nreturn {\n    name,\n    filename: 'models/' + name,\n    modelId: name\n};","outputs":1,"noerr":0,"x":750,"y":240,"wires":[["daaa1498.7e6cb8"]]},{"id":"8ec6c176.58a7d","type":"ui_template","z":"1777bb00.010975","group":"fbf8d3c2.ce17f","name":"List buttons","order":2,"width":"1","height":"1","format":"<div style=\"margin: -3px -6px;\">\n    <div ng-repeat=\"v in msg.payload track by $index\">\n        <md-button ng-click=\"send({ modelId: v });\" style=\"width: 100%; margin: 0;border-radius: 0;\">\n            {{v}}\n        </md-button>\n    </div>\n</div>","storeOutMessages":true,"fwdInMessages":false,"templateScope":"local","x":1110,"y":360,"wires":[[]]},{"id":"aa400236.9a9b4","type":"comment","z":"1777bb00.010975","name":"Evaluation dashboard","info":"Depending on `UI separator` we will update parts of the dashboard view\n - If `name` is present we will update the list of models and the active model\n - If the model training/validation `history` is present we will update the accuracy and the loss plots\n - If `accuracy` value is present we will update the accuracy meter\n - If `confusionMatrix` is present we will update the confusion matrix\n - If `samples` is present we will update the datatable containing predictions of individual samples\n","x":620,"y":300,"wires":[]},{"id":"1ccd71f6.051fae","type":"comment","z":"1777bb00.010975","name":"Data dashboard","info":"Depending on `UI separator` we will update parts of the dashboard view\n - If `dataset` is present we will populate the given dataset into a UI group table\n - If `labels` is present we will plot label statistics\n - If `features` is present we will plot feature statistics","x":600,"y":840,"wires":[]},{"id":"1d796ff7.7d741","type":"ui_template","z":"1777bb00.010975","group":"2c8034f0.0682a4","name":"Data table","order":1,"width":"12","height":"4","format":"\n<table>\n    <tr ng-repeat=\"sample in msg.payload.samples track by $index\">\n      <td ng-repeat=\"feature in sample.feature track by $index\">\n        {{feature}}\n      </td>\n      <td>\n        {{msg.payload.labels[sample.label.actual] || sample.label.actual}}\n      </td>\n      <td>\n        {{msg.payload.labels[sample.label.pred] || sample.label.pred}}\n      </td>\n    </tr>\n</table>","storeOutMessages":true,"fwdInMessages":false,"templateScope":"local","x":590,"y":640,"wires":[[]]},{"id":"952a9f7a.95f7f","type":"join","z":"1777bb00.010975","name":"","mode":"custom","build":"merged","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":890,"y":400,"wires":[["eca10a06.d149b8"]]},{"id":"dc5e2226.b377e8","type":"function","z":"1777bb00.010975","name":"","func":"msg.payload = {\n    models: msg.payload\n};\nreturn msg;","outputs":1,"noerr":0,"x":710,"y":380,"wires":[["952a9f7a.95f7f"]]},{"id":"79923d86.629fc4","type":"function","z":"1777bb00.010975","name":"","func":"msg.payload = {\n    name: msg.payload.name\n};\nreturn msg;","outputs":1,"noerr":0,"x":570,"y":420,"wires":[["952a9f7a.95f7f"]]},{"id":"aa65b2b7.16cf38","type":"stream-write-file","z":"f6d4da8d.2deed8","name":"store val data stream","filename":"","ignoreTopNLines":"","ignoreBlankLines":true,"x":1220,"y":320,"wires":[["3184cf1b.aad328"]]},{"id":"14e221f6.9f278e","type":"subflow:d1cb7ae0.934918","z":"f6d4da8d.2deed8","name":"","env":[{"name":"ratio","type":"bool","value":"false"},{"name":"random","type":"bool","value":"false"}],"x":580,"y":320,"wires":[["d7363e9f.414898"],["cfa36968.5b0b68"]]},{"id":"2cd37f1c.40ae2","type":"glob","z":"1777bb00.010975","name":"","pattern":"datasets/!(train|test|val)*.data","x":640,"y":1240,"wires":[["4322bc13.9bba4c"]]},{"id":"8971de75.b4b39","type":"ui_template","z":"1777bb00.010975","group":"204b4daf.75747a","name":"Dataset versions","order":1,"width":"7","height":"5","format":"<div style=\"margin: -3px -6px;\">\n    <div ng-repeat=\"v in msg.payload.datasets track by $index\">\n        <md-button ng-click=\"send({dataset: v});\" style=\"width: 100%; margin: 0;border-radius: 0;\" ng-class=\"{'md-primary': v === msg.payload.dataset}\">\n            {{v.substring(v.lastIndexOf('/'), v.length)}}\n        </md-button>\n    </div>\n</div>","storeOutMessages":false,"fwdInMessages":false,"templateScope":"local","x":1130,"y":1240,"wires":[["6472d8e4.609828"]]},{"id":"dde350ae.d0bc4","type":"ui_template","z":"1777bb00.010975","group":"a0e3d641.64ac9","name":"Data table","order":1,"width":"28","height":"6","format":"\n<table style=\"width:100%;\">\n    <tr ng-repeat=\"sample in msg.payload\">\n      <td ng-repeat=\"feature in sample\">\n        {{feature}}\n      </td>\n    </tr>\n</table>","storeOutMessages":true,"fwdInMessages":false,"templateScope":"local","x":1290,"y":1000,"wires":[[]]},{"id":"e7f1b082.d35cc8","type":"csv","z":"1777bb00.010975","name":"","sep":",","hdrin":"","hdrout":"","multi":"mult","ret":"\\n","temp":"","skip":"0","x":1130,"y":1000,"wires":[["dde350ae.d0bc4"]]},{"id":"9a023c06.5624","type":"function","z":"1777bb00.010975","name":"","func":"msg.filename = msg.payload.dataset;\nreturn msg;","outputs":1,"noerr":0,"x":570,"y":1000,"wires":[["9c63d0f8.4202c"]]},{"id":"34c1c110.053d2e","type":"link out","z":"1136490a.a15807","name":"Dataset requested by UI","links":["5b04766a.ecbff8"],"x":1115,"y":380,"wires":[]},{"id":"6472d8e4.609828","type":"function","z":"1777bb00.010975","name":"","func":"const m = {\n    payload: {\n        dataset: msg.dataset\n    },\n    dataset: msg.dataset\n};\nreturn m;","outputs":1,"noerr":0,"x":1590,"y":1240,"wires":[[]]},{"id":"4322bc13.9bba4c","type":"function","z":"1777bb00.010975","name":"","func":"let m = {\n    payload: {\n        datasets: msg.payload || [],\n        dataset: msg.dataset\n    }\n};\nif (m.payload.datasets.length > 0) {\n    context.set('datasets', m.payload.datasets);\n}\nelse {\n    m.payload.datasets = context.get('datasets');\n}\nreturn m;","outputs":1,"noerr":0,"x":950,"y":1240,"wires":[["8971de75.b4b39"]]},{"id":"b83d515d.a82428","type":"glob","z":"1777bb00.010975","name":"","pattern":"","x":810,"y":1120,"wires":[["d4d4758d.2115c"]]},{"id":"b9d9a15e.b18c38","type":"ui_template","z":"1777bb00.010975","group":"7872e5c.f152c1c","name":"Train datasets","order":1,"width":"7","height":"5","format":"<div style=\"margin: -3px -6px;\">\n    <div ng-repeat=\"v in msg.payload.datasets track by $index\">\n        <md-button ng-click=\"send({dataset: v});\" style=\"width: 100%; margin: 0;border-radius: 0;\" ng-class=\"{'md-primary': v === msg.payload.dataset}\">\n            {{v.substring(v.lastIndexOf('/'), v.length)}}\n        </md-button>\n    </div>\n</div>","storeOutMessages":false,"fwdInMessages":false,"templateScope":"local","x":1120,"y":1120,"wires":[["6472d8e4.609828"]]},{"id":"d4d4758d.2115c","type":"function","z":"1777bb00.010975","name":"","func":"let m = {\n    payload: {\n        datasets: msg.payload || [],\n        dataset: msg.dataset\n    }\n};\nif (m.payload.datasets.length > 0) {\n    context.set('datasets', m.payload.datasets);\n}\nelse {\n    m.payload.datasets = context.get('datasets');\n}\nreturn m;","outputs":1,"noerr":0,"x":950,"y":1120,"wires":[["b9d9a15e.b18c38"]]},{"id":"33d20ef8.239ac2","type":"glob","z":"1777bb00.010975","name":"","pattern":"","x":810,"y":1160,"wires":[["659d7381.21688c"]]},{"id":"17673bad.cf834c","type":"ui_template","z":"1777bb00.010975","group":"5b54f152.aed92","name":"Test datasets","order":1,"width":"7","height":"5","format":"<div style=\"margin: -3px -6px;\">\n    <div ng-repeat=\"v in msg.payload.datasets track by $index\">\n        <md-button ng-click=\"send({dataset: v});\" style=\"width: 100%; margin: 0;border-radius: 0;\" ng-class=\"{'md-primary': v === msg.payload.dataset}\">\n            {{v.substring(v.lastIndexOf('/'), v.length)}}\n        </md-button>\n    </div>\n</div>","storeOutMessages":false,"fwdInMessages":false,"templateScope":"local","x":1120,"y":1160,"wires":[["6472d8e4.609828"]]},{"id":"659d7381.21688c","type":"function","z":"1777bb00.010975","name":"","func":"let m = {\n    payload: {\n        datasets: msg.payload || [],\n        dataset: msg.dataset\n    }\n};\nif (m.payload.datasets.length > 0) {\n    context.set('datasets', m.payload.datasets);\n}\nelse {\n    m.payload.datasets = context.get('datasets');\n}\nreturn m;","outputs":1,"noerr":0,"x":950,"y":1160,"wires":[["17673bad.cf834c"]]},{"id":"5c1cc3d6.3d88dc","type":"glob","z":"1777bb00.010975","name":"","pattern":"","x":810,"y":1200,"wires":[["99c001be.3e6a2"]]},{"id":"a2743442.e47bb","type":"ui_template","z":"1777bb00.010975","group":"c6bd7ad.116d288","name":"Validation datasets","order":1,"width":"7","height":"5","format":"<div style=\"margin: -3px -6px;\">\n    <div ng-repeat=\"v in msg.payload.datasets track by $index\">\n        <md-button ng-click=\"send({dataset: v});\" style=\"width: 100%; margin: 0;border-radius: 0;\" ng-class=\"{'md-primary': v === msg.payload.dataset}\">\n            {{v.substring(v.lastIndexOf('/'), v.length)}}\n        </md-button>\n    </div>\n</div>","storeOutMessages":false,"fwdInMessages":false,"templateScope":"local","x":1130,"y":1200,"wires":[["6472d8e4.609828"]]},{"id":"99c001be.3e6a2","type":"function","z":"1777bb00.010975","name":"","func":"let m = {\n    payload: {\n        datasets: msg.payload || [],\n        dataset: msg.dataset\n    }\n};\nif (m.payload.datasets.length > 0) {\n    context.set('datasets', m.payload.datasets);\n}\nelse {\n    m.payload.datasets = context.get('datasets');\n}\nreturn m;","outputs":1,"noerr":0,"x":950,"y":1200,"wires":[["a2743442.e47bb"]]},{"id":"5de7914f.d44e9","type":"function","z":"1777bb00.010975","name":"datasets/train.*.data","func":"const dataset = msg.payload.dataset.split('/');\nconst file = dataset[dataset.length-1];\nconst type = 'train.';\nif (!file.startsWith(type)) {\n    dataset[dataset.length-1] = type + file;\n}\nlet m = {\n    payload: {\n        pattern: dataset.join('/')\n    },\n    dataset: msg.dataset\n};\nreturn m;","outputs":1,"noerr":0,"x":620,"y":1120,"wires":[["b83d515d.a82428"]]},{"id":"6dd31469.8abd0c","type":"function","z":"1777bb00.010975","name":"datasets/test.*.data","func":"const dataset = msg.payload.dataset.split('/');\nconst file = dataset[dataset.length-1];\nconst type = 'test.';\nif (!file.startsWith(type)) {\n    dataset[dataset.length-1] = type + file;\n}\nlet m = {\n    payload: {\n        pattern: dataset.join('/')\n    },\n    dataset: msg.dataset\n};\nreturn m;","outputs":1,"noerr":0,"x":610,"y":1160,"wires":[["33d20ef8.239ac2"]]},{"id":"711d9ea5.f0d188","type":"function","z":"1777bb00.010975","name":"datasets/val.*.data","func":"const dataset = msg.payload.dataset.split('/');\nconst file = dataset[dataset.length-1];\nconst type = 'val.';\nif (!file.startsWith(type)) {\n    dataset[dataset.length-1] = type + file;\n}\nlet m = {\n    payload: {\n        pattern: dataset.join('/')\n    },\n    dataset: msg.dataset\n};\nreturn m;","outputs":1,"noerr":0,"x":610,"y":1200,"wires":[["5c1cc3d6.3d88dc"]]},{"id":"9c63d0f8.4202c","type":"stream-read-file","z":"1777bb00.010975","name":"Read dataset file","filename":"","ignoreTopNLines":0,"maxLines":"150","ignoreBlankLines":true,"x":750,"y":1000,"wires":[["1f57e162.92ac6f"]]},{"id":"1f57e162.92ac6f","type":"function","z":"1777bb00.010975","name":"Collect samples","func":"const lines = context.get('lines') || [];\nif (lines.length < 100) lines.push(msg.payload);\nif (msg.eof) {\n    msg.payload = lines.join('\\n');\n    context.set('lines', []);\n    return msg;\n}\ncontext.set('lines', lines);","outputs":1,"noerr":0,"x":960,"y":1000,"wires":[["e7f1b082.d35cc8"]]},{"id":"482e92e8.a98bc4","type":"ui_template","z":"1777bb00.010975","group":"a0e3d641.64ac9","name":"Table styles","order":1,"width":0,"height":0,"format":"<style type=\"text/css\">\n    table {\n        width: 100%;\n        border-spacing: 0px;\n        border-collapse: separate;\n    }\n    table tr td {\n        padding: 10px;\n    }\n    table tr * {\n        background: transparent;\n    }\n    table tr td {\n        background: rgba(100,255, 100, 0.2);\n    }\n    table tr:nth-child(2n) td {\n        background: rgba(100,100,100,0.2);\n    }\n</style>","storeOutMessages":true,"fwdInMessages":true,"templateScope":"global","x":310,"y":640,"wires":[[]]},{"id":"ffbe5cb5.6e78d","type":"function","z":"a27141c0.ce8e7","name":"Custom layer Input-layer","func":"let features = msg.payload.features.filter(f => f.isFeature);\nconst inputShape = [];\n\nwhile(features && (features.length > 0 || features.size > 1)) {\n    inputShape.push(features.length || features.size);\n    features = features[0];\n}\n\nmsg.config = {\n    units: 100*100*3,\n    inputShape: inputShape //.filter(i => i > 1)\n}\nreturn msg;","outputs":1,"noerr":0,"x":630,"y":160,"wires":[["18364714.f91a49"]]},{"id":"f5b531ae.8a91d8","type":"function","z":"524deb7f.0b2fbc","name":"feature properties","func":"const records = msg.payload;\nconst recordNames = Object.keys(records[0]);\nlet labels = msg.labels || env.get('labels');\nlet featureNames = msg.features || env.get('features');\nif (!Array.isArray(labels)) {\n    labels = Object.keys(labels);\n}\nconst features = recordNames.map(feature => {\n    let type = \"string\";\n    let max, min, avg, distinct;\n    min = max = avg = distinct = null;\n    const exampleVal = records[0][feature];\n    if (!isNaN(parseFloat(exampleVal))) {\n        type = \"number\";\n        const features = records.map(r => r[feature]);\n        max = Math.max(...features);\n        min = Math.min(...features);\n        avg = features.reduce((r, g) => r + g, 0) / features.length;\n        distinct = features.filter((f, i) => features.indexOf(f) === i).length;\n    } else if (exampleVal.match(/[0-9]{2,4}-[0-9]{1,2}-[0-9]{1,2}/g)) {\n        type = \"date\";\n        const features = records.map(r => r[feature]);\n        max = Math.max(...features);\n        min = Math.min(...features);\n        distinct = features.filter((f, i) => features.indexOf(f) === i).length;\n    } else if(exampleVal.startsWith('datasets/')) {\n        type = \"reference\";\n        msg.samples = msg.samples || [];\n        msg.samples.push({ name: feature, exampleVal });\n    } else {\n        type = \"string\";\n        const recs = records.map(r => r[feature]);\n        const rCounts = recs.map(r => r.length);\n        max = Math.max(...rCounts);\n        min = Math.min(...rCounts);\n        avg = rCounts.reduce((r, g) => r + g, 0) / rCounts.length;\n        distinct = recs.filter((f, i) => recs.indexOf(f) === i).length;\n    }\n    return {\n        name: feature,\n        isLabel: labels.indexOf(feature) > -1,\n        isFeature: featureNames.indexOf(feature) > -1,\n        type,\n        max,\n        min,\n        avg,\n        distinct\n    }\n});\nmsg.payload = features;\nreturn msg;","outputs":1,"noerr":0,"x":570,"y":160,"wires":[["60167822.0befd8"]],"inputLabels":["store data"],"outputLabels":["store data"]},{"id":"4222e97f.917278","type":"csv","z":"524deb7f.0b2fbc","name":"","sep":",","hdrin":true,"hdrout":"","multi":"mult","ret":"\\n","temp":"","skip":"0","x":350,"y":80,"wires":[["9d96b0fb.272","f5b531ae.8a91d8","38500125.a7764e"]]},{"id":"97a875aa.b008","type":"json","z":"f6d4da8d.2deed8","name":"","property":"payload","action":"","pretty":false,"x":930,"y":60,"wires":[["768d2d24.1ed34c"]]},{"id":"3184cf1b.aad328","type":"link out","z":"f6d4da8d.2deed8","name":"validation stream finnished","links":["c22b7032.a7968"],"x":1435,"y":380,"wires":[]},{"id":"4aa4a6df.6756f8","type":"link out","z":"f6d4da8d.2deed8","name":"train stream finnished","links":["c22b7032.a7968"],"x":1435,"y":300,"wires":[]},{"id":"95a6a970.7a5a3","type":"function","z":"6b6290b0.1a853","name":"sätt iris.data filnamn","func":"msg.filename = \"datasets/iris.data\";\nreturn msg;","outputs":1,"noerr":0,"x":480,"y":140,"wires":[["95150de6.1d79b"]]},{"id":"2df85ce4.e252ec","type":"file in","z":"524deb7f.0b2fbc","name":"","filename":"","format":"utf8","chunk":false,"sendError":false,"encoding":"none","x":190,"y":80,"wires":[["4222e97f.917278"]]},{"id":"614b9d0c.1cecd4","type":"subflow:524deb7f.0b2fbc","z":"f6d4da8d.2deed8","name":"","env":[{"name":"labels","type":"json","value":"[\"setosa\",\"versicolor\",\"virginica\"]"}],"x":580,"y":480,"wires":[["793ddfc6.bc43b"]]},{"id":"793ddfc6.bc43b","type":"json","z":"f6d4da8d.2deed8","name":"","property":"payload","action":"","pretty":false,"x":810,"y":480,"wires":[["25cee849.b56d9"]]},{"id":"aa671175.6db1a","type":"file","z":"f6d4da8d.2deed8","name":"","filename":"","appendNewline":true,"createDir":true,"overwriteFile":"true","encoding":"none","x":1070,"y":480,"wires":[["c5491b52.26284"]]},{"id":"1be1dd5c.c6cd8b","type":"function","z":"f6d4da8d.2deed8","name":"Set meta information","func":"const meta = flow.get('meta');\nmsg.filename = msg.payload.filename;\nmsg.labels = Object.keys(meta.labels);\nmsg.features = meta.features.filter(f => !f.isLabel).map(f => f.name);\nreturn msg;","outputs":1,"noerr":0,"x":300,"y":480,"wires":[["614b9d0c.1cecd4"]]},{"id":"25cee849.b56d9","type":"function","z":"f6d4da8d.2deed8","name":"Meta file","func":"msg.filename = `${msg.path}/${msg.streamType}.${msg.file}.meta`;\nreturn msg;","outputs":1,"noerr":0,"x":940,"y":480,"wires":[["aa671175.6db1a"]]},{"id":"30f7f3e4.84f204","type":"function","z":"f6d4da8d.2deed8","name":"Shuffle data","func":"const m = { ...msg };\nconst timeDelay = 5000;\nsetTimeout(() => {\n    node.send(m);\n}, parseInt(Math.random() * (timeDelay - 1)) + timeDelay * msg.eof);","outputs":1,"noerr":0,"x":270,"y":200,"wires":[["d4009b85.e779e8"]]},{"id":"42b68b58.f7ca44","type":"link out","z":"6b6290b0.1a853","name":"","links":["87b44ca.338beb"],"x":1735,"y":140,"wires":[]},{"id":"87b44ca.338beb","type":"link in","z":"1136490a.a15807","name":"Update evaluation dashboard","links":["42b68b58.f7ca44","3d4e2fac.6bc8f8","22eedf66.fa6088","1a35ef12.178251"],"x":515,"y":180,"wires":[["87bd8eb0.8cabc"]]},{"id":"3d4e2fac.6bc8f8","type":"link out","z":"e3e29167.088cf8","name":"Done processing dataset!","links":["87b44ca.338beb"],"x":1335,"y":120,"wires":[]},{"id":"fec59e5e.ce8938","type":"function","z":"e3e29167.088cf8","name":"Ränsa medelandet ifrån Data preprocessing","func":"msg.payload = undefined;\nreturn msg;","outputs":1,"noerr":0,"x":1090,"y":120,"wires":[["3d4e2fac.6bc8f8"]]},{"id":"22eedf66.fa6088","type":"link out","z":"e3e29167.088cf8","name":"Done training the model","links":["87b44ca.338beb"],"x":1335,"y":340,"wires":[]},{"id":"6217e4fd.d76f2c","type":"ui_template","z":"1777bb00.010975","group":"16e8d9be.b05f96","name":"Feature statistics","order":1,"width":"14","height":"6","format":"<table>\n    <tr>\n      <td ng-repeat=\"(attr, val) in msg.payload.features[0]\">\n        {{attr}}\n      </td>\n    </tr>\n    <tr ng-repeat=\"feature in msg.payload.features\">\n      <td ng-repeat=\"(attr, val) in feature\">\n        {{val}}\n      </td>\n    </tr>\n</table>","storeOutMessages":true,"fwdInMessages":true,"templateScope":"local","x":610,"y":880,"wires":[[]]},{"id":"fcbeeab3.6858e8","type":"ui_template","z":"1777bb00.010975","group":"16e8d9be.b05f96","name":"Label statistics","order":1,"width":"14","height":"6","format":"<div>\n    {{msg.payload.labels}}\n</div>","storeOutMessages":true,"fwdInMessages":true,"templateScope":"global","x":600,"y":920,"wires":[[]]},{"id":"b0245d46.3e9d4","type":"ui_chart","z":"1777bb00.010975","name":"","group":"16e8d9be.b05f96","order":1,"width":"14","height":"6","label":"Label count","chartType":"bar","legend":"true","xformat":"HH:mm:ss","interpolate":"linear","nodata":"","dot":false,"ymin":"","ymax":"","removeOlder":1,"removeOlderPoints":"","removeOlderUnit":"3600","cutout":0,"useOneColor":false,"colors":["#1f77b4","#aec7e8","#ff7f0e","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5"],"useOldStyle":false,"outputs":1,"x":1290,"y":960,"wires":[[]]},{"id":"52db8b58.153f74","type":"function","z":"1777bb00.010975","name":"","func":"const labelKeys = Object.keys(msg.payload.labels).map(l => [l]);\nconst labelCounts = Object.values(msg.payload.labels).map(v => v);\nmsg.payload = [\n    {\n        \"series\": [msg.dataset],\n        \"data\": labelCounts,\n        \"labels\": labelKeys\n    }\n];\nreturn msg;","outputs":1,"noerr":0,"x":570,"y":960,"wires":[["b0245d46.3e9d4"]]},{"id":"714b0ba9.632f4c","type":"file in","z":"f69da6e8.753218","name":"","filename":"","format":"utf8","chunk":false,"sendError":false,"encoding":"none","x":450,"y":80,"wires":[["ca2f6e2a.048068"]]},{"id":"ca2f6e2a.048068","type":"json","z":"f69da6e8.753218","name":"","property":"payload","action":"","pretty":false,"x":630,"y":80,"wires":[["82c8b32a.2f4e5"]]},{"id":"ed93d16e.a75cf8","type":"function","z":"f69da6e8.753218","name":"dataset to meta-filename","func":"const dataset = msg.dataset.split('.');\nmsg.filename = dataset.slice(0, dataset.length - 1).join('.') + '.meta';\nreturn msg;","outputs":1,"noerr":0,"x":250,"y":80,"wires":[["714b0ba9.632f4c"]]},{"id":"82c8b32a.2f4e5","type":"function","z":"f69da6e8.753218","name":"dataset in payload","func":"const dataset = msg.dataset.split('.');\nmsg.payload.dataset = msg.dataset;\nreturn msg;","outputs":1,"noerr":0,"x":850,"y":80,"wires":[[]]},{"id":"3b4661be.fe505e","type":"subflow:524deb7f.0b2fbc","z":"6b6290b0.1a853","name":"Beräkna dataset meta information","env":[{"name":"labels","type":"json","value":"[\"species\"]"}],"x":990,"y":140,"wires":[["2bc2d1b.63af82e","a0c04e6f.61276"]]},{"id":"a0c04e6f.61276","type":"debug","z":"6b6290b0.1a853","name":"Log","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":1270,"y":100,"wires":[]},{"id":"2bc2d1b.63af82e","type":"json","z":"6b6290b0.1a853","name":"Konvertera till json","property":"payload","action":"","pretty":true,"x":1310,"y":140,"wires":[["980c7151.4e4758"]]},{"id":"980c7151.4e4758","type":"file","z":"6b6290b0.1a853","name":"","filename":"datasets/iris.meta","appendNewline":true,"createDir":true,"overwriteFile":"true","encoding":"none","x":1530,"y":140,"wires":[["42b68b58.f7ca44"]]},{"id":"b00cee40.76d54","type":"function","z":"e3e29167.088cf8","name":"iris dataset","func":"msg.name = 'iris';\nmsg.filename = 'datasets/' + msg.name;\nreturn msg;","outputs":1,"noerr":0,"x":410,"y":120,"wires":[["c084096d.f96b5"]]},{"id":"5f8741eb.0de67","type":"function","z":"f6d4da8d.2deed8","name":"meta data file","func":"const sep = msg.filename.lastIndexOf('/');\nmsg.path = msg.filename.substr(0, sep);\nmsg.file = msg.filename.substr(sep + 1, msg.filename.length);\n\nmsg.filename = `${msg.path}/${msg.file}.meta`;\n\nreturn msg;","outputs":1,"noerr":0,"x":580,"y":60,"wires":[["1931990b.ba9e37"]]},{"id":"f2e21e2c.e8eeb","type":"function","z":"f6d4da8d.2deed8","name":"data file","func":"msg.filename = `${msg.path}/${msg.file}.data`;\nreturn msg;","outputs":1,"noerr":0,"x":600,"y":120,"wires":[["769341f0.bc40d8","d7363e9f.414898","cfa36968.5b0b68","303ae3c6.d02fe4"]]},{"id":"303ae3c6.d02fe4","type":"function","z":"f6d4da8d.2deed8","name":"train data file","func":"msg.streamType = 'train';\nmsg.filename = `${msg.path}/${msg.streamType}.${msg.file}.data`;\nreturn msg;","outputs":1,"noerr":0,"x":890,"y":200,"wires":[["4e0c7f64.dd0c7"]]},{"id":"d7363e9f.414898","type":"function","z":"f6d4da8d.2deed8","name":"test data file","func":"msg.streamType = 'test';\nmsg.filename = `${msg.path}/${msg.streamType}.${msg.file}.data`;\nreturn msg;","outputs":1,"noerr":0,"x":890,"y":260,"wires":[["3ccadbfa.e6cf74"]]},{"id":"cfa36968.5b0b68","type":"function","z":"f6d4da8d.2deed8","name":"val data file","func":"msg.streamType = 'val';\nmsg.filename = `${msg.path}/${msg.streamType}.${msg.file}.data`;\nreturn msg;","outputs":1,"noerr":0,"x":890,"y":320,"wires":[["aa65b2b7.16cf38"]]},{"id":"358231d9.d9fd06","type":"function","z":"a27141c0.ce8e7","name":"Custom layer output-layer","func":"const units = msg.payload.features.filter(f => f.isLabel).length;\n\nmsg.config = {\n    units\n}\nreturn msg;","outputs":1,"noerr":0,"x":1580,"y":160,"wires":[["44170f92.6b20e"]]},{"id":"7f9fef35.41311","type":"file in","z":"a27141c0.ce8e7","name":"load meta","filename":"","format":"utf8","chunk":false,"sendError":false,"encoding":"none","x":540,"y":80,"wires":[["25a5f12.7a6438e"]]},{"id":"25a5f12.7a6438e","type":"json","z":"a27141c0.ce8e7","name":"","property":"payload","action":"","pretty":false,"x":690,"y":80,"wires":[["6b04c308.fea9ec"]]},{"id":"e87dc2e9.ae9268","type":"function","z":"a27141c0.ce8e7","name":"train filename","func":"const sep = msg.filename.lastIndexOf('/');\nconst path = msg.filename.substr(0, sep);\nconst file = msg.filename.substring(sep + 1, msg.filename.length);\nflow.set('filename', msg.filename);\nmsg.filename = path + '/train.' + file + '.meta';\nreturn msg;","outputs":1,"noerr":0,"x":340,"y":80,"wires":[["7f9fef35.41311"]]},{"id":"4459470a.cb7458","type":"function","z":"e3e29167.088cf8","name":"iris dataset","func":"msg.filename = 'datasets/iris';\nreturn msg;","outputs":1,"noerr":0,"x":410,"y":180,"wires":[["cc93c7d2.38a64"]]},{"id":"cdb1ffbd.615de","type":"function","z":"9212f77a.6e3f4","name":"Config","func":"const trainKey = Object.keys(msg.payload).find(meta => meta.indexOf('/train.') > -1);\nconst valKey = Object.keys(msg.payload).find(meta => meta.indexOf('/val.') > -1);\nconst trainMeta = msg.payload[trainKey];\nconst valMeta = msg.payload[valKey];\n\nconst trainTotalInstances = Object.values(trainMeta.labels).reduce((g, v) => g + v, 0);\nconst trainBatchesPerEpoch = Math.max(1, Math.min(trainTotalInstances, parseInt(env.get('batchesPerEpoch')) || Infinity));\nconst trainBatchSize = Math.floor(trainTotalInstances / trainBatchesPerEpoch);\n\nconst valTotalInstances = Object.values(valMeta.labels).reduce((g, v) => g + v, 0);\nconst valBatchesPerEpoch = Math.max(1, Math.min(valTotalInstances, parseInt(env.get('valBatchesPerEpoch')) || Infinity));\nconst valBatchSize = Math.floor(valTotalInstances / valBatchesPerEpoch);\n\nmsg.config = {\n    trainBatchSize,\n    trainBatchesPerEpoch,\n    valBatchSize,\n    valBatchesPerEpoch,\n    epochs: env.get('epochs'),\n    xs: trainMeta.features.filter(f => f.isFeature).map(f => f.name),\n    ys: trainMeta.features.filter(f => f.isLabel).map(f => f.name)\n};\nmsg.features = trainMeta.features;\nreturn msg;","outputs":1,"noerr":0,"x":990,"y":220,"wires":[["ff9a0199.decd4"]]},{"id":"d564db0b.52de28","type":"file in","z":"9212f77a.6e3f4","name":"load meta","filename":"","format":"utf8","chunk":false,"sendError":false,"encoding":"none","x":560,"y":140,"wires":[["edd5e001.94be58"]]},{"id":"edd5e001.94be58","type":"json","z":"9212f77a.6e3f4","name":"","property":"payload","action":"","pretty":false,"x":710,"y":140,"wires":[["2b039720.037e38"]]},{"id":"9d62ce5f.ebb3c8","type":"function","z":"9212f77a.6e3f4","name":"train filename","func":"msg.topic='train';\nreturn msg;","outputs":1,"noerr":0,"x":200,"y":220,"wires":[["9b8b6761.21f218"]]},{"id":"8ab80e50.9e0ab8","type":"function","z":"9212f77a.6e3f4","name":"Clear instances","func":"flow.set('traininstances', []);\nflow.set('valinstances', []);\nflow.set('trainbatches', 0);\nflow.set('valbatches', 0);\nreturn msg;","outputs":1,"noerr":0,"x":960,"y":380,"wires":[[]]},{"id":"f87d567b.dc0f78","type":"function","z":"a27141c0.ce8e7","name":"Reset filename","func":"msg.filename = flow.get('filename');\nreturn msg;","outputs":1,"noerr":0,"x":2080,"y":160,"wires":[[]]},{"id":"657631ec.805928","type":"function","z":"f6d4da8d.2deed8","name":"Dataset name","func":"msg.filename = `${msg.path}/${msg.file}`;\nreturn msg;","outputs":1,"noerr":0,"x":1520,"y":480,"wires":[[]]},{"id":"d70ce831.c21188","type":"function","z":"9212f77a.6e3f4","name":"train file","func":"msg.topic = 'train';\nreturn msg;","outputs":1,"noerr":0,"x":1320,"y":240,"wires":[["5ded3781.13e738"]]},{"id":"9bea5ddb.cd4928","type":"function","z":"9212f77a.6e3f4","name":"val file","func":"const m = { ...msg };\nm.topic = 'val';\n// Make sure test data comes after train data\nsetTimeout(() => node.send(m), 500);","outputs":1,"noerr":0,"x":1310,"y":200,"wires":[["5ded3781.13e738"]]},{"id":"9dca2b48.08db","type":"function","z":"5c1978bb.949448","name":"feature to numeric","func":"const metaFeature = msg.features.find(f => f.name === msg.feature);\nif (metaFeature === undefined) {\n    throw new Error(\"Could not find feature: \" + msg.parts.key + msg.feature);\n} else if (metaFeature.type === 'number') {\n    const value = parseInt(msg.payload);\n    msg.payload = value;\n} else if (metaFeature.type === 'string') {\n    const value = Array.from(msg.payload).map(f => f.charCodeAt(0));\n    msg.payload = value;\n} else if (metaFeature.type === 'reference') {\n    const info = { ...msg, filename: msg.payload };\n    node.send([info, null]);\n    return;\n} else {\n    throw new Error(\"Unkown type: \" + metaFeature.type);\n}\n\nreturn [null, msg];","outputs":2,"noerr":0,"x":730,"y":80,"wires":[["8084b10.8f69b5"],["e2e5232.9ebc66"]],"outputLabels":["Reference type","numeric future object"]},{"id":"31c6471c.ffbab8","type":"subflow:5c1978bb.949448","z":"9212f77a.6e3f4","name":"","env":[],"x":1770,"y":240,"wires":[["9ee69ddb.542f8"]]},{"id":"8084b10.8f69b5","type":"file in","z":"5c1978bb.949448","name":"","filename":"","format":"","chunk":false,"sendError":false,"encoding":"base64","x":950,"y":40,"wires":[["e2e5232.9ebc66"]]},{"id":"e2e5232.9ebc66","type":"join","z":"5c1978bb.949448","name":"","mode":"auto","build":"string","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1110,"y":80,"wires":[[]]},{"id":"a376cc1b.92c67","type":"split","z":"5c1978bb.949448","name":"","splt":"\\n","spltType":"str","arraySplt":1,"arraySpltType":"len","stream":false,"addname":"feature","x":530,"y":80,"wires":[["9dca2b48.08db"]]},{"id":"60167822.0befd8","type":"split","z":"524deb7f.0b2fbc","name":"","splt":"\\n","spltType":"str","arraySplt":"1","arraySpltType":"len","stream":false,"addname":"","x":770,"y":160,"wires":[["dcd47e24.54fc48"]]},{"id":"b6f600c3.e61ab8","type":"join","z":"524deb7f.0b2fbc","name":"","mode":"auto","build":"string","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1570,"y":180,"wires":[["89f63580.cc5fd8"]]},{"id":"89f63580.cc5fd8","type":"function","z":"524deb7f.0b2fbc","name":"","func":"msg.payload = {\n    features: msg.payload\n};\nreturn msg;","outputs":1,"noerr":0,"x":1710,"y":180,"wires":[["823cffa1.064b8"]]},{"id":"dcd47e24.54fc48","type":"switch","z":"524deb7f.0b2fbc","name":"","property":"payload.type","propertyType":"msg","rules":[{"t":"eq","v":"reference","vt":"str"},{"t":"else"}],"checkall":"false","repair":false,"outputs":2,"x":910,"y":160,"wires":[["765a2112.bcd32"],["b6f600c3.e61ab8"]]},{"id":"102a3965.71c787","type":"file in","z":"524deb7f.0b2fbc","name":"","filename":"","format":"","chunk":false,"sendError":false,"encoding":"none","x":1230,"y":120,"wires":[["9c38a00a.60588"]]},{"id":"765a2112.bcd32","type":"function","z":"524deb7f.0b2fbc","name":"open sample","func":"msg.feature = msg.payload;\nmsg.tmpfilename = msg.filename;\nmsg.filename = msg.samples.find(f => f.name === msg.payload.name).exampleVal;\nreturn msg;","outputs":1,"noerr":0,"x":1090,"y":120,"wires":[["102a3965.71c787"]]},{"id":"9c38a00a.60588","type":"function","z":"524deb7f.0b2fbc","name":"assign size","func":"const { feature, tmpfilename, ...m } = msg;\nfeature.size = msg.payload.length; // m.payload.bitmap.data.length; // m.payload.bitmap.width * m.payload.bitmap.height;\nm.payload = { ...feature };\nm.feature = feature;\nm.filename = tmpfilename;\nreturn m;","outputs":1,"noerr":0,"x":1390,"y":120,"wires":[["b6f600c3.e61ab8"]]},{"id":"da3e1285.edaef","type":"function","z":"9212f77a.6e3f4","name":"Init training status","func":"node.status({\n    fill: 'yellow',\n    shape: 'dot',\n    text: 'Init training...'\n});","outputs":1,"noerr":0,"x":210,"y":260,"wires":[[]]},{"id":"7379eda1.e4588c","type":"function","z":"5c1978bb.949448","name":"image to bitmap","func":"const image = msg.payload;\nconst m = { ...msg };\nm.payload = image.bitmap.data;\nreturn m;\nconst imgData = Array(image.bitmap.height).fill(0)\n                      .map(a => Array(image.bitmap.width).fill(0))\nimage.scan(0, 0, image.bitmap.width, image.bitmap.height, function(x, y, idx) {\n    var red = this.bitmap.data[idx + 0] & 0xFF;\n    var green = this.bitmap.data[idx + 1] & 0xFF;\n    var blue = this.bitmap.data[idx + 2] & 0xFF;\n    var alpha = this.bitmap.data[idx + 3] & 0xFF;\n    imgData[y][x] = (red << 24) + (green << 16) + (blue << 8) + (alpha);\n    if (x === image.bitmap.width - 1 && y === image.bitmap.height - 1) {\n        // image scan finished, do your stuff\n        m.payload = imgData;\n        m.dimension = { width: image.bitmap.width, height: image.bitmap.height };\n        node.send(m);\n    }\n});","outputs":1,"noerr":0,"x":1280,"y":20,"wires":[[]]},{"id":"a517cace.a78a6","type":"jimp-image","z":"5c1978bb.949448","name":"","data":"payload","dataType":"msg","ret":"img","parameter1":"500","parameter1Type":"num","parameter2":"500","parameter2Type":"num","parameter3":"RESIZE_NEAREST_NEIGHBOR","parameter3Type":"resizeMode","parameter4":"","parameter4Type":"none","parameter5":"","parameter5Type":"msg","parameter6":"","parameter6Type":"msg","parameter7":"","parameter7Type":"msg","parameter8":"","parameter8Type":"msg","parameterCount":3,"jimpFunction":"resize","selectedJimpFunction":{"name":"resize","fn":"resize","description":"resize the image. One of the w or h parameters can be set to automatic (\"Jimp.AUTO\" or -1).","parameters":[{"name":"w","type":"num|auto","required":true,"hint":"the width to resize the image to (or \"Jimp.AUTO\" or -1)"},{"name":"h","type":"num|auto","required":true,"hint":"the height to resize the image to (or \"Jimp.AUTO\" or -1)"},{"name":"mode","type":"resizeMode","required":false,"hint":"a scaling method (e.g. Jimp.RESIZE_BEZIER)"}]},"x":1110,"y":20,"wires":[["7379eda1.e4588c"]]},{"id":"41a3eac.23a4a94","type":"function","z":"1136490a.a15807","name":"besräm vilket data som skall köras","func":"msg.name = msg.payload;\nreturn msg;","outputs":1,"noerr":0,"x":420,"y":240,"wires":[["87bd8eb0.8cabc"]]},{"id":"c22b7032.a7968","type":"link in","z":"f6d4da8d.2deed8","name":"stream finnished","links":["4aa4a6df.6756f8","3184cf1b.aad328","6de0517f.8cf07"],"x":95,"y":480,"wires":[["1be1dd5c.c6cd8b","f3279129.574a1"]]},{"id":"6de0517f.8cf07","type":"link out","z":"f6d4da8d.2deed8","name":"test stream finnished","links":["c22b7032.a7968"],"x":1435,"y":340,"wires":[]},{"id":"823cffa1.064b8","type":"function","z":"524deb7f.0b2fbc","name":"join","func":"const key = msg.filename +  'payload';\nconst payload = {\n    ...msg.payload,\n    ...(context.get(key) || {})\n};\nif (payload.features !== undefined && payload.labels !== undefined) {\n    context.set(key, null);\n    node.send({ ...msg, payload});\n} else {\n    context.set(key, payload);\n}","outputs":1,"noerr":0,"x":1890,"y":80,"wires":[[]],"icon":"node-red/join.png"},{"id":"5b614b0.41a14b4","type":"subflow:5c1978bb.949448","z":"f49996b9.5975f8","name":"","env":[],"x":430,"y":180,"wires":[["53cdccc9.9f980c"]]},{"id":"53cdccc9.9f980c","type":"function","z":"f49996b9.5975f8","name":"get values of payload","func":"msg.payload = Object.values(msg.payload);\nreturn msg;","outputs":1,"noerr":0,"x":660,"y":180,"wires":[["ccdf3573.6ac368"]]},{"id":"1ee8070.dde0979","type":"delay","z":"5c1978bb.949448","name":"","pauseType":"rate","timeout":"5","timeoutUnits":"seconds","rate":"213","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":140,"y":120,"wires":[[]]},{"id":"3f2fd475.992dcc","type":"status","z":"5c1978bb.949448","name":"","scope":["859b3e69.f96298"],"x":320,"y":140,"wires":[[]]},{"id":"859b3e69.f96298","type":"function","z":"5c1978bb.949448","name":"Set status of msg","func":"const count = context.get('count') || 0;\ncontext.set('count', count + 1);\nflow.set('msg', {...msg});\nif (msg.eof && msg.topic === 'train') {\n    node.status({\n        text: `All ${count + 1} samples processed`\n    });\n    context.set('count', null);\n} else if (msg.topic === 'train' && count % 213 === 0) {\n    node.status({\n        text: `Processed ${count + 1} samples`\n    });\n}\nreturn msg;","outputs":1,"noerr":0,"x":350,"y":80,"wires":[["a376cc1b.92c67"]]},{"id":"f3279129.574a1","type":"debug","z":"f6d4da8d.2deed8","name":"Data info","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":260,"y":520,"wires":[]},{"id":"e1a67c15.d3c8","type":"link out","z":"f6d4da8d.2deed8","name":"feature heading computed","links":["b4495df5.28df4"],"x":1335,"y":60,"wires":[]},{"id":"b4495df5.28df4","type":"link in","z":"f6d4da8d.2deed8","name":"Calculate one hot vectors","links":["e1a67c15.d3c8"],"x":95,"y":120,"wires":[["f2e21e2c.e8eeb"]]},{"id":"38500125.a7764e","type":"debug","z":"524deb7f.0b2fbc","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":500,"y":280,"wires":[]},{"id":"309a5351.40157c","type":"inject","z":"1136490a.a15807","name":"","topic":"","payload":"iris","payloadType":"str","repeat":"","crontab":"","once":false,"onceDelay":"1","x":150,"y":240,"wires":[["41a3eac.23a4a94"]]},{"id":"3722c500.5ede7c","type":"compile-model","z":"fbd114ef.b5abb8","name":"","loss":"categoricalCrossentropy","optimizer":"adam","metrics":["accuracy"],"x":1600,"y":180,"wires":[["e02f1d0e.d0fc38","9f47d86d.bdaa"]]},{"id":"1563fefd.d0ed79","type":"dense-layer","z":"fbd114ef.b5abb8","name":"Input-layer","activation":"sigmoid","units":null,"x":650,"y":220,"wires":[["5ff687f9.2c0888"]]},{"id":"5ff687f9.2c0888","type":"dense-layer","z":"fbd114ef.b5abb8","name":"Hidden-layer-1","activation":"relu","units":10,"x":880,"y":180,"wires":[["cb7fbc8b.64dd4"]]},{"id":"cc778977.6b3b4","type":"sequential-network","z":"fbd114ef.b5abb8","name":"","modelId":"iris","x":330,"y":180,"wires":[["12965ead.ec43d1"]]},{"id":"6957feae.9b84e","type":"dense-layer","z":"fbd114ef.b5abb8","name":"Output-layer","activation":"softmax","units":null,"x":1370,"y":220,"wires":[["3722c500.5ede7c"]]},{"id":"e06b5b5e.f6c64","type":"status","z":"fbd114ef.b5abb8","name":"","scope":["e02f1d0e.d0fc38"],"x":1840,"y":280,"wires":[[]]},{"id":"e02f1d0e.d0fc38","type":"function","z":"fbd114ef.b5abb8","name":"Status complete","func":"node.status({\n    \"fill\": \"green\",\n    \"shape\": \"dot\",\n    \"text\": \"NN Model constructed\"\n});","outputs":1,"noerr":0,"x":1820,"y":240,"wires":[[]]},{"id":"12965ead.ec43d1","type":"function","z":"fbd114ef.b5abb8","name":"Custom layer Input-layer","func":"const features = msg.payload.features.filter(f => f.isFeature);\nconst inputShape = [features.length];\nfeatures.forEach(f => {\n    if (f.size > 0) {\n        inputShape.push(f.size);\n    }\n});\n\nmsg.config = {\n    units: 15,\n    inputShape: inputShape //.filter(i => i > 1)\n}\nreturn msg;","outputs":1,"noerr":0,"x":610,"y":180,"wires":[["1563fefd.d0ed79"]]},{"id":"a844b0c3.3151b8","type":"function","z":"fbd114ef.b5abb8","name":"Custom layer output-layer","func":"const units = msg.payload.features.filter(f => f.isLabel).length;\n\nmsg.config = {\n    units\n}\nreturn msg;","outputs":1,"noerr":0,"x":1320,"y":180,"wires":[["6957feae.9b84e"]]},{"id":"ae3e132d.774b58","type":"file in","z":"fbd114ef.b5abb8","name":"load meta","filename":"","format":"utf8","chunk":false,"sendError":false,"encoding":"none","x":540,"y":100,"wires":[["26e9afc9.418868"]]},{"id":"26e9afc9.418868","type":"json","z":"fbd114ef.b5abb8","name":"","property":"payload","action":"","pretty":false,"x":690,"y":100,"wires":[["cc778977.6b3b4"]]},{"id":"e327de7a.e9e818","type":"function","z":"fbd114ef.b5abb8","name":"train filename","func":"const sep = msg.filename.lastIndexOf('/');\nconst path = msg.filename.substr(0, sep);\nconst file = msg.filename.substring(sep + 1, msg.filename.length);\nflow.set('filename', msg.filename);\nmsg.filename = path + '/train.' + file + '.meta';\nreturn msg;","outputs":1,"noerr":0,"x":340,"y":100,"wires":[["ae3e132d.774b58"]]},{"id":"9f47d86d.bdaa","type":"function","z":"fbd114ef.b5abb8","name":"Reset filename","func":"msg.filename = flow.get('filename');\nreturn msg;","outputs":1,"noerr":0,"x":1820,"y":180,"wires":[[]]},{"id":"361fbd83.e3014a","type":"function","z":"e3e29167.088cf8","name":"Bestäm filnamnet som sparar modellen som","func":"msg.filename = 'models/' + msg.modelId;\nmsg.name = msg.modelId;\nreturn msg;","outputs":1,"noerr":0,"x":510,"y":300,"wires":[["3e228b40.032f5c"]]},{"id":"92aa6f25.1c727","type":"subflow:9212f77a.6e3f4","z":"e3e29167.088cf8","name":"Träna iris modellen","env":[{"name":"epochs","type":"num","value":"50"},{"name":"batchesPerEpoch","type":"str","value":"1"},{"name":"valBatchesPerEpoch","type":"str","value":"1"}],"x":1170,"y":180,"wires":[["705f6e4a.434da","a61eb500.c57b58"]]},{"id":"237a47e7.7d3de8","type":"dense-layer","z":"a27141c0.ce8e7","name":"Hidden-layer-2","activation":"relu","units":30,"x":1140,"y":300,"wires":[["6adcd11.8f7a03"]]},{"id":"6adcd11.8f7a03","type":"dense-layer","z":"a27141c0.ce8e7","name":"Hidden-layer-3","activation":"relu","units":10,"x":1360,"y":300,"wires":[["358231d9.d9fd06"]]},{"id":"c4e85604.72708","type":"function","z":"a27141c0.ce8e7","name":"Custom layer hidden-layer-2","func":"let features = msg.payload.features.filter(f => f.isFeature);\n\nconst tf = global.get('tf');\nconst addLayer = global.get('addLayer');\naddLayer(\n    msg.modelId,\n    tf.layers.reshape({\n        name: 'reshape',\n        //inputShape: msg.config.inputShape,\n        targetShape: [100, 100, 3]\n    })\n);\naddLayer(\n    msg.modelId,\n    tf.layers.conv2d({\n        name: 'Custom-layer-hidden-layer-2',\n        filters: 32,\n        kernelSize: [3, 3],\n        padding: 'same'\n    })\n);\n// Convolutional Layer #1\n/*addLayer(\n    msg.modelId,\n    tf.layers.conv2d({\n        name: 'Custom-layer-hidden-layer-2',\n        filters: 2,\n        kernelSize: [5, 5],\n        padding: 'valid'\n    })\n);\n/*\n// Pooling Layer #1\naddLayer(\n    msg.modelId,\n    tf.layers.maxPooling2d({\n        name: 'Custom-layer-hidden-layer-2-maxpooling',\n        poolSize: [2, 2],\n        strides: 1\n    })\n);\n*/\nreturn msg;","outputs":1,"noerr":0,"x":1060,"y":160,"wires":[["358231d9.d9fd06"]]},{"id":"be9474ed.4b7a38","type":"ui_template","z":"1777bb00.010975","group":"2c8034f0.0682a4","name":"FCNN library","order":3,"width":0,"height":0,"format":"<script type=\"application/javascript\" src=\"https://d3js.org/d3.v5.min.js\"></script>\n<script type=\"application/javascript\">\n\nfunction FCNN() {\n    let nWise = (n, array) => {\n        iterators = Array(n).fill().map(() => array[Symbol.iterator]());\n        iterators.forEach((it, index) => Array(index).fill().forEach(() => it.next()));\n        return Array(array.length - n + 1).fill().map(() => (iterators.map(it => it.next().value)));\n    };\n    \n    let pairWise = (array) => nWise(2, array);\n    \n    let sum = (arr) => arr.reduce((a,b)=>a+b);\n    \n    let range = n => [...Array(n).keys()];\n    \n    let rand = (min, max) => Math.random() * (max - min) + min;\n    \n    Array.prototype.last = function() { return this[this.length - 1]; };\n    \n    let flatten = (array) => array.reduce((flat, toFlatten) => (flat.concat(Array.isArray(toFlatten) ? flatten(toFlatten) : toFlatten)), []);\n\n\n    let randomWeight = () => Math.random() * 2 - 1;\n    let randomWeights = (a) => a.map((l, i) => Array(l*a[i+1] || 0).fill().map(c => randomWeight(c)));\n\n\n    /////////////////////////////////////////////////////////////////////////////\n                          ///////    Variables    ///////\n    /////////////////////////////////////////////////////////////////////////////\n\n    var w = window.innerWidth;\n    var h = window.innerHeight;\n\n    var svg = d3.select(\"#graph-container\").append(\"svg\").attr(\"xmlns\", \"http://www.w3.org/2000/svg\");\n    var g = svg.append(\"g\");\n    svg.style(\"cursor\", \"move\");\n\n    var edgeWidthProportional = true;\n    var edgeWidth = 1;\n    var weightedEdgeWidth = d3.scaleLinear().domain([0, 1]).range([0, edgeWidth]);\n\n    var edgeOpacityProportional = true;\n    var edgeOpacity = 1.0\n    var weightedEdgeOpacity = d3.scaleLinear().domain([0, 1]).range([0, 1]);\n\n    var edgeColorProportional = true;\n    var defaultEdgeColor = \"#505050\";\n    var negativeEdgeColor = \"#ff0000\";\n    var positiveEdgeColor = \"#00ff00\";\n    var weightedEdgeColor = d3.scaleLinear().domain([-1, 0, 1]).range([negativeEdgeColor, \"yellow\", positiveEdgeColor]);\n\n    var nodeDiameter = 20;\n    var nodeColor = \"#ffffff\";\n    var nodeBorderColor = \"#333333\";\n\n    var betweenLayers = 160;\n\n    var architecture = [8, 12, 8];\n    var betweenNodesInLayer = [20, 20, 20];\n    var weights = randomWeights(architecture);\n    var graph = {};\n    var layer_offsets = [];\n    var largest_layer_width = 0;\n    var nnDirection = 'right';\n    var showBias = true;\n    var showLabels = true;\n    var showArrowheads = false;\n    var arrowheadStyle = \"empty\";\n\n    let sup_map = {'0': '⁰', '1': '¹', '2': '²', '3': '³', '4': '⁴', '5': '⁵', '6': '⁶', '7': '⁷', '8': '⁸', '9': '⁹'};\n    let sup = (s) => Array.prototype.map.call(s, (d) => (d in sup_map && sup_map[d]) || d).join('');\n\n    let textFn = (layer_index, layer_width) => ((layer_index === 0 ? \"Input\" : (layer_index === architecture.length-1 ? \"Output\" : \"Hidden\")) + \" Layer ∈ ℝ\" + sup(layer_width.toString()));\n    var nominal_text_size = 12;\n    var textWidth = 70;\n\n    var marker = svg.append(\"svg:defs\").append(\"svg:marker\")\n        .attr(\"id\", \"arrow\")\n        .attr(\"viewBox\", \"0 -5 10 10\")\n        .attr(\"markerWidth\", 7)\n        .attr(\"markerHeight\", 7)\n        .attr(\"orient\", \"auto\");\n\n    var arrowhead = marker.append(\"svg:path\")\n        .attr(\"d\", \"M0,-5L10,0L0,5\")\n        .style(\"stroke\", defaultEdgeColor);\n\n    var link = g.selectAll(\".link\");\n    var node = g.selectAll(\".node\");\n    var text = g.selectAll(\".text\");\n\n    /////////////////////////////////////////////////////////////////////////////\n                          ///////    Methods    ///////\n    /////////////////////////////////////////////////////////////////////////////\n\n    function redraw({architecture_=architecture,\n                     weights_=weights,\n                     showBias_=showBias,\n                     showLabels_=showLabels}={}) {\n\n        architecture = architecture_;\n        weights = weights_;\n        showBias = showBias_;\n        showLabels = showLabels_;\n\n        graph.nodes = architecture.map((layer_width, layer_index) => {\n            return range(layer_width).map(node_index => {\n                return {\n                    'id': layer_index+'_'+node_index,\n                    'layer': layer_index,\n                    'node_index': node_index\n                };\n            });\n        });\n        graph.links = pairWise(graph.nodes).map((nodes) => {\n            return nodes[0].map(left => {\n                return nodes[1].map(right => {\n                    if (right.node_index >= 0) {\n                        // first index weights second index optional bias\n                        const layerWeights = weights[right.layer][0];\n                        //if (!layerWeights) return null;\n                        const nodeWeightIndex = right.node_index + architecture[right.layer] * left.node_index;\n                        return {\n                            'id': left.id+'-'+right.id,\n                            'source': left.id,\n                            'target': right.id,\n                            'weight': layerWeights[nodeWeightIndex] // res.getWeight(left, right)\n                        };\n                    }\n                    return null;\n                });\n            });\n        });\n        graph.nodes = flatten(graph.nodes);\n        graph.links = flatten(graph.links).filter(l => {\n            if (l) {\n                if (showBias) {\n                    if (parseInt(l['target'].split('_')[0]) !== architecture.length-1) {\n                        return l['target'].split('_')[1] !== '0';\n                    }\n                }\n                return true;\n            }\n            return false;\n            // return (l && (showBias ? (parseInt(l['target'].split('_')[0]) !== architecture.length-1 ? (l['target'].split('_')[1] !== '0') : true) : true))\n        });\n\n        label = architecture.map((layer_width, layer_index) => {\n            return {\n                'id': 'layer_'+layer_index+'_label',\n                'layer': layer_index,\n                'text': textFn(layer_index, layer_width)\n            };\n        });\n\n        link = link.data(graph.links, d => d.id);\n        link.exit().remove();\n        link = link.enter()\n                   .insert(\"path\", \".node\")\n                   .attr(\"class\", \"link\")\n                   .merge(link);\n\n        node = node.data(graph.nodes, d => d.id);\n        node.exit().remove();\n        node = node.enter()\n                   .append(\"circle\")\n                   .attr(\"r\", nodeDiameter/2)\n                   .attr(\"class\", \"node\")\n                   .attr(\"id\", function(d) { return d.id; })\n                   .on(\"mousedown\", set_focus)\n                   .on(\"mouseup\", remove_focus)\n                   .merge(node);\n\n        text = text.data(label, d => d.id);\n        text.exit().remove();\n        text = text.enter()\n                   .append(\"text\")\n                   .attr(\"class\", \"text\")\n                   .attr(\"dy\", \".35em\")\n                   .style(\"font-size\", nominal_text_size+\"px\")\n                   .merge(text)\n                   .text(function(d) { return (showLabels ? d.text : \"\"); });\n\n        style();\n    }\n\n    function redistribute({betweenNodesInLayer_=betweenNodesInLayer,\n                           betweenLayers_=betweenLayers,\n                           nnDirection_=nnDirection}={}) {\n\n        betweenNodesInLayer = betweenNodesInLayer_;\n        betweenLayers = betweenLayers_;\n        nnDirection = nnDirection_;\n\n        layer_widths = architecture.map((layer_width, i) => layer_width * nodeDiameter + (layer_width - 1) * betweenNodesInLayer[i])\n\n        largest_layer_width = Math.max(...layer_widths);\n\n        layer_offsets = layer_widths.map(layer_width => (largest_layer_width - layer_width) / 2);\n\n        let indices_from_id = (id) => id.split('_').map(x => parseInt(x));\n\n        let x = (layer, node_index) => layer * (betweenLayers + nodeDiameter) + w/2 - (betweenLayers * layer_offsets.length/3);\n        let y = (layer, node_index) => layer_offsets[layer] + node_index * (nodeDiameter + betweenNodesInLayer[layer]) + h/2 - largest_layer_width/2;\n\n        let xt = (layer, node_index) => layer_offsets[layer] + node_index * (nodeDiameter + betweenNodesInLayer[layer]) + w/2  - largest_layer_width/2;\n        let yt = (layer, node_index) => layer * (betweenLayers + nodeDiameter) + h/2 - (betweenLayers * layer_offsets.length/3);\n\n        if (nnDirection == 'up') { x = xt; y = yt; }\n\n        node.attr('cx', function(d) { return x(d.layer, d.node_index); })\n            .attr('cy', function(d) { return y(d.layer, d.node_index); });\n\n        link.attr(\"d\", (d) => \"M\" + x(...indices_from_id(d.source)) + \",\" +\n                                    y(...indices_from_id(d.source)) + \", \" +\n                                    x(...indices_from_id(d.target)) + \",\" +\n                                    y(...indices_from_id(d.target)));\n\n        text.attr(\"x\", function(d) { return (nnDirection === 'right' ? x(d.layer, d.node_index) - textWidth/2 : w/2 + largest_layer_width/2 + 20 ); })\n            .attr(\"y\", function(d) { return (nnDirection === 'right' ? h/2 + largest_layer_width/2 + 20       : y(d.layer, d.node_index) ); });\n\n    }\n\n    function style({edgeWidthProportional_=edgeWidthProportional,\n                    edgeWidth_=edgeWidth,\n                    edgeOpacityProportional_=edgeOpacityProportional,\n                    edgeOpacity_=edgeOpacity,\n                    negativeEdgeColor_=negativeEdgeColor,\n                    positiveEdgeColor_=positiveEdgeColor,\n                    edgeColorProportional_=edgeColorProportional,\n                    defaultEdgeColor_=defaultEdgeColor,\n                    nodeDiameter_=nodeDiameter,\n                    nodeColor_=nodeColor,\n                    nodeBorderColor_=nodeBorderColor,\n                    showArrowheads_=showArrowheads,\n                    arrowheadStyle_=arrowheadStyle}={}) {\n        // Edge Width\n        edgeWidthProportional   = edgeWidthProportional_;\n        edgeWidth               = edgeWidth_;\n        weightedEdgeWidth       = d3.scaleLinear().domain([0, 1]).range([0, edgeWidth]);\n        // Edge Opacity\n        edgeOpacityProportional = edgeOpacityProportional_;\n        edgeOpacity             = edgeOpacity_;\n        // Edge Color\n        defaultEdgeColor        = defaultEdgeColor_;\n        edgeColorProportional   = edgeColorProportional_;\n        negativeEdgeColor       = negativeEdgeColor_;\n        positiveEdgeColor       = positiveEdgeColor_;\n        weightedEdgeColor       = d3.scaleLinear().domain([-1, 0, 1]).range([negativeEdgeColor, \"white\", positiveEdgeColor]);\n        // Node Styles\n        nodeDiameter            = nodeDiameter_;\n        nodeColor               = nodeColor_;\n        nodeBorderColor         = nodeBorderColor_;\n        // Arrowheads\n        showArrowheads          = showArrowheads_;\n        arrowheadStyle          = arrowheadStyle_;\n\n        link.style(\"stroke-width\", function(d) {\n            if (edgeWidthProportional) { return weightedEdgeWidth(Math.abs(d.weight)); } else { return edgeWidth; }\n        });\n\n        link.style(\"stroke-opacity\", function(d) {\n            if (edgeOpacityProportional) { return weightedEdgeOpacity(Math.abs(d.weight)); } else { return edgeOpacity; }\n        });\n\n        link.style(\"stroke\", function(d) {\n            if (edgeColorProportional) { return weightedEdgeColor(d.weight); } else { return defaultEdgeColor; }\n        });\n\n        link.attr('marker-end', showArrowheads ? \"url(#arrow)\" : '');\n        marker.attr('refX', nodeDiameter*1.4 + 12);\n        arrowhead.style(\"fill\", arrowheadStyle === 'empty' ? \"none\" : defaultEdgeColor);\n\n        node.attr(\"r\", nodeDiameter/2);\n        node.style(\"fill\", nodeColor);\n        node.style(\"stroke\", nodeBorderColor);\n\n    }\n\n    /////////////////////////////////////////////////////////////////////////////\n                          ///////    Focus    ///////\n    /////////////////////////////////////////////////////////////////////////////\n\n    function set_focus(d) {\n        d3.event.stopPropagation();\n        node.style(\"opacity\", function(o) { return (d == o || o.layer == d.layer - 1) ? 1 : 0.1; });\n        link.style(\"opacity\", function(o) { return (o.target == d.id) ? 1 : 0.02; });\n    }\n\n    function remove_focus() {\n        d3.event.stopPropagation();\n        node.style(\"opacity\", 1);\n        link.style(\"opacity\", function () { return edgeOpacity; })\n    }\n\n    /////////////////////////////////////////////////////////////////////////////\n                          ///////    Zoom & Resize   ///////\n    /////////////////////////////////////////////////////////////////////////////\n\n    svg.call(d3.zoom()\n               .scaleExtent([1 / 2, 8])\n               .on(\"zoom\", zoomed));\n\n    function zoomed() { g.attr(\"transform\", d3.event.transform); }\n\n    function resize() {\n        w = window.innerWidth;\n        h = window.innerHeight;\n        svg.attr(\"width\", w).attr(\"height\", h);\n    }\n\n    d3.select(window).on(\"resize\", resize)\n\n    resize();\n\n    /////////////////////////////////////////////////////////////////////////////\n                          ///////    Return    ///////\n    /////////////////////////////////////////////////////////////////////////////\n\n    const res = {\n        'redraw'           : redraw,\n        'redistribute'     : redistribute,\n        'style'            : style,\n\n        'graph'            : graph,\n        'link'             : link,\n        'getWeight'        : randomWeight\n    };\n    return res\n\n}\n\n</script>\n","storeOutMessages":true,"fwdInMessages":true,"templateScope":"global","x":310,"y":600,"wires":[[]]},{"id":"769a4fa1.7c9a5","type":"ui_template","z":"1777bb00.010975","group":"2c8034f0.0682a4","name":"Plot Neural network","order":1,"width":"11","height":"7","format":"<div id=\"graph-container\">\n<script type=\"application/javascript\">\nfcnn = FCNN();\n\nfunction restart({architecture, layerWeights}) {\n    betweenNodesInLayer = architecture.map(n => 1);\n\n    fcnn.redraw({\n        'architecture_': architecture,\n        'weights_': layerWeights,\n        'showBias_': true\n    });\n    fcnn.redistribute({'betweenNodesInLayer_':betweenNodesInLayer});\n\n    // $('#count span:first').text(fcnn.graph.nodes.length+\" nodes, \"+fcnn.graph.links.length+\" edges you don't need to draw yourself! \")\n}\n(function(scope) {\n    //Have to use $watch so we pick up new, incoming msg's\n    scope.$watch('msg.payload', function(newVal, oldVal) {\n        if (scope.msg === undefined || scope.msg.payload === undefined) return;\n        restart(scope.msg.payload);\n    });\n})(scope);\n\n/////////////////////////////////////////////////////////////////////////////\n                ///////    Select Styling    ///////\n/////////////////////////////////////////////////////////////////////////////\n/*\n$(\"#edgeWidthProportional\").change(   function() { fcnn.style({'edgeWidthProportional_': this.checked}) });\n$(\"#edgeWidth\").change(               function() { fcnn.style({'edgeWidth_': parseFloat(this.value)}) });\n$(\"#edgeOpacityProportional\").change( function() { fcnn.style({'edgeOpacityProportional_': this.checked});\n    if (this.checked) { $(\"#edgeOpacity\").prop('disabled', true); }\n    else { $(\"#edgeOpacity\").prop('disabled', false); }\n});\n$(\"#edgeOpacity\").change(             function() { fcnn.style({'edgeOpacity_': parseFloat(this.value)}) });\n$(\"#negativeEdgeColor\").change(       function() { fcnn.style({'negativeEdgeColor_': this.value}) });\n$(\"#positiveEdgeColor\").change(       function() { fcnn.style({'positiveEdgeColor_': this.value}) });\n$(\"#edgeColorProportional\").change(   function() { fcnn.style({'edgeColorProportional_': this.checked}) });\n$(\"#defaultEdgeColor\").change(        function() { fcnn.style({'defaultEdgeColor_': this.value}) });\n$(\"#nodeDiameter\").change(            function() { fcnn.style({'nodeDiameter_': parseFloat(this.value)}) });\n$(\"#nodeColor\").change(               function() { fcnn.style({'nodeColor_': this.value}) });\n$(\"#nodeBorderColor\").change(         function() { fcnn.style({'nodeBorderColor_': this.value}) });\n$(\"#betweenLayers\").change(           function() { fcnn.redistribute({'betweenLayers_': parseFloat(this.value)}) });\n$('#nnDirection input:radio').change( function() { fcnn.redistribute({'nnDirection_': this.value}) });\n$(\"#showBias\").change(                function() { fcnn.redraw({'showBias_': this.checked}); fcnn.redistribute(); });\n$(\"#showLabels\").change(              function() { fcnn.redraw({'showLabels_': this.checked}) });\n$(\"#showArrowheads\").change(          function() { fcnn.style({'showArrowheads_': this.checked}) });\n$(\"#arrowhead input:radio\").change(   function() { fcnn.style({'arrowheadStyle_': this.value}) });\n*/\n\n\n/////////////////////////////////////////////////////////////////////////////\n                 ///////    Select Architecture    ///////\n/////////////////////////////////////////////////////////////////////////////\n\n/*\n$(document).on('click', '#newRandomWeights', function() {\n    link = fcnn.link.data([]);\n    fcnn.link.exit().remove();\n    restart();\n});\n\nd3.select(\"#download\").on(\"click\", function() {\n    // ga('send', 'event', 'downloadSVG', 'FCNN');\n\n    d3.select(this)\n      .attr(\"href\", 'data:application/octet-stream;base64,' + btoa(unescape(encodeURIComponent(d3.select(\"#graph-container\").html()))))\n      .attr(\"download\", \"nn.svg\")\n})\n*/\n</script>\n</div>","storeOutMessages":true,"fwdInMessages":true,"templateScope":"local","x":620,"y":680,"wires":[["651fa431.e994cc"]]},{"id":"dce28e65.c2659","type":"function","z":"9212f77a.6e3f4","name":"Clear instances","func":"flow.set('traininstances', []);\nflow.set('valinstances', []);\nflow.set('trainbatches', 0);\nflow.set('valbatches', 0);\nreturn msg;","outputs":1,"noerr":0,"x":960,"y":260,"wires":[["ff9a0199.decd4"]]},{"id":"12d6f06b.3e8a8","type":"delay","z":"e6a2d29.a39f93","name":"","pauseType":"rate","timeout":"5","timeoutUnits":"seconds","rate":"500","nbRateUnits":"5","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":610,"y":80,"wires":[["54a129ab.8d1a58"]]},{"id":"2b039720.037e38","type":"join","z":"9212f77a.6e3f4","name":"","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"dataset","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"num","reduceFixup":"","x":850,"y":220,"wires":[["cdb1ffbd.615de"]]},{"id":"a0ad2a64.b508f8","type":"function","z":"9212f77a.6e3f4","name":"val filename","func":"msg.topic = 'val';\nreturn msg;","outputs":1,"noerr":0,"x":190,"y":180,"wires":[["9b8b6761.21f218"]]},{"id":"516d21c6.e1cb98","type":"subflow:f69da6e8.753218","z":"1136490a.a15807","name":"","env":[],"x":960,"y":380,"wires":[["34c1c110.053d2e"]]},{"id":"63b90026.1b685","type":"stream-read-file","z":"f49996b9.5975f8","name":"test data","filename":"","ignoreTopNLines":"","maxLines":"","ignoreBlankLines":true,"x":660,"y":80,"wires":[["6f967ce8.dbc974"]]},{"id":"e903f2e.7a89f1","type":"function","z":"f49996b9.5975f8","name":"set test.name.data filename","func":"msg.meta = msg.payload;\nmsg.filename = msg.dataset;\nreturn msg;","outputs":1,"noerr":0,"x":440,"y":80,"wires":[["63b90026.1b685"]]},{"id":"963c97fe.901fa8","type":"subflow:f69da6e8.753218","z":"f49996b9.5975f8","name":"","env":[],"x":160,"y":80,"wires":[["e903f2e.7a89f1"]]},{"id":"617611c6.86bc3","type":"function","z":"1136490a.a15807","name":"Bestäm vilken modell som skall användas","func":"const payload = msg.payload || {};\nconst m = {\n    payload: {\n        ...payload,\n        name: msg.name\n    },\n    dataset: 'datasets/test.' + msg.name + '.data',\n    modelId: msg.name,\n    name: msg.name,\n    filename:  msg.filename\n};\nreturn m;","outputs":1,"noerr":0,"x":1250,"y":240,"wires":[["91fa0c00.4bc688","220d8fd1.bc406","f9dfee1f.7c681"]]},{"id":"220d8fd1.bc406","type":"subflow:f49996b9.5975f8","z":"1136490a.a15807","name":"Skapa test predictions för utvärdering","env":[],"x":1650,"y":180,"wires":[["91fa0c00.4bc688"]]},{"id":"f9dfee1f.7c681","type":"function","z":"1136490a.a15807","name":"Hämta vikterna på den tränade modellen","func":"const getLayerWeights = global.get('getLayerWeights');\nconst getLayerConfigs = global.get('getLayerConfigs');\nconst cfgs = getLayerConfigs(msg.modelId);\nmsg.payload.layerWeights = getLayerWeights(msg.modelId, true);\nmsg.payload.architecture = cfgs.map(c => c.units || (c.inputShape || c.batchInputShape)[1]);\nreturn msg;","outputs":1,"noerr":0,"x":1640,"y":220,"wires":[["91fa0c00.4bc688"]]},{"id":"651fa431.e994cc","type":"debug","z":"1777bb00.010975","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":1070,"y":660,"wires":[]},{"id":"cb7fbc8b.64dd4","type":"dense-layer","z":"fbd114ef.b5abb8","name":"Hidden-layer-2","activation":"relu","units":10,"x":1080,"y":180,"wires":[["a844b0c3.3151b8"]]},{"id":"d4009b85.e779e8","type":"function","z":"f6d4da8d.2deed8","name":"ratio","func":"msg.ratio = env.get('trainRatio');\nmsg.random = env.get('random');\nreturn msg;","outputs":1,"noerr":0,"x":430,"y":200,"wires":[["6a0dc694.30a1e"]]},{"id":"6bd82c1a.b27374","type":"function","z":"f6d4da8d.2deed8","name":"test/val ratio","func":"msg.ratio = env.get('testRatio');\nreturn msg;","outputs":1,"noerr":0,"x":590,"y":260,"wires":[["14e221f6.9f278e"]]},{"id":"9b8b6761.21f218","type":"function","z":"9212f77a.6e3f4","name":"guard ongoing trainings","func":"function letMePass() {\n    const sep = msg.filename.lastIndexOf('/');\n    const path = msg.filename.substr(0, sep);\n    const file = msg.filename.substring(sep + 1, msg.filename.length);\n    /*msg.path = path;\n    msg.file = file;\n    msg.filename = `${path}/${msg.topic}.${file}.meta`;*/\n    msg.dataset = `${path}/${msg.topic}.${file}.data`;\n    node.send(msg);\n}\nconst instances = [...(flow.get(msg.topic + 'instances') || [])];\nif (instances.length === 0) {\n    letMePass();\n} else {\n    setTimeout(function () {\n        const newInstances = flow.get(msg.topic + 'instances') || [];\n        if (newInstances.length === 0 || instances.filter(i => newInstances.indexOf(i) >= 0).length === instances.length) {\n            flow.set(msg.topic + 'instances', []);\n            letMePass();\n        } else {\n            node.error('Unable to start a second training jobb')\n        }\n    }, 1000);\n}","outputs":1,"noerr":0,"x":450,"y":220,"wires":[["896424b.5f460d8"]]},{"id":"ed4e8e9a.cd13a","type":"function","z":"e6a2d29.a39f93","name":"set batch params","func":"const m = { ...msg };\nconst payload = Object.values(m.payload).find(v => {\n    return v.dataset && v.dataset.indexOf(`/${msg.topic}.`) >= 0;\n}) || m;\nm.dataset = payload.dataset;\nm.filename = payload.dataset;\nm.config = {\n    ...m.config,\n    batchesPerEpoch: m.config[`${msg.topic}BatchesPerEpoch`],\n    batchSize: m.config[`${msg.topic}BatchSize`]\n};\n\n// Add 1 line extra because of header in CSV file\nm.maxLines = 2 + m.config.batchesPerEpoch * m.config.batchSize;\nreturn m;","outputs":1,"noerr":0,"x":210,"y":80,"wires":[["be326383.7e033"]]},{"id":"896424b.5f460d8","type":"subflow:f69da6e8.753218","z":"9212f77a.6e3f4","name":"","env":[],"x":680,"y":220,"wires":[["2b039720.037e38"]]},{"id":"5ded3781.13e738","type":"subflow:e6a2d29.a39f93","z":"9212f77a.6e3f4","name":"","env":[],"x":1540,"y":240,"wires":[["31c6471c.ffbab8"]]},{"id":"70b8c1bb.bc03f","type":"link in","z":"9212f77a.6e3f4","name":"","links":["9ee69ddb.542f8"],"x":635,"y":320,"wires":[["c39afae8.d82cf8"]]},{"id":"9ee69ddb.542f8","type":"link out","z":"9212f77a.6e3f4","name":"","links":["70b8c1bb.bc03f"],"x":1915,"y":240,"wires":[]},{"id":"41cbef11.7f8088","type":"comment","z":"6b6290b0.1a853","name":"Beräkna dataegenskaper","info":"Detta block beräknar datats egenskaper så som vilka features är de som skall användas för träning och vilka är de som skall förutspås.\n * Snittet\n * Max värdet\n * Min värdet\n * Antal klasser som finns","x":970,"y":100,"wires":[]},{"id":"4167ef8e.f3b73","type":"http in","z":"59ab95b7.f411fc","name":"","url":"/reinforcement","method":"get","upload":false,"swaggerDoc":"","x":170,"y":40,"wires":[["c29dffb9.ac2aa"]]},{"id":"39451d85.596e32","type":"http response","z":"59ab95b7.f411fc","name":"","statusCode":"","headers":{},"x":830,"y":40,"wires":[]},{"id":"c29dffb9.ac2aa","type":"file in","z":"59ab95b7.f411fc","name":"","filename":"datasets/floppyBirds/index.html","format":"utf8","chunk":false,"sendError":false,"encoding":"none","x":550,"y":40,"wires":[["39451d85.596e32"]]},{"id":"49d1086e.512158","type":"http in","z":"59ab95b7.f411fc","name":"","url":"/js/:file","method":"get","upload":false,"swaggerDoc":"","x":150,"y":80,"wires":[["97bd9cbe.5ff5c"]]},{"id":"224b48c4.dfdc2","type":"http response","z":"59ab95b7.f411fc","name":"","statusCode":"","headers":{"Content-Type":"application/javascript"},"x":830,"y":80,"wires":[]},{"id":"20313a28.a3802e","type":"file in","z":"59ab95b7.f411fc","name":"","filename":"","format":"utf8","chunk":false,"sendError":false,"encoding":"none","x":630,"y":80,"wires":[["224b48c4.dfdc2"]]},{"id":"97bd9cbe.5ff5c","type":"function","z":"59ab95b7.f411fc","name":"javascript file","func":"msg.filename = 'datasets/floppyBirds/js/' + msg.req.params.file;\nreturn msg;","outputs":1,"noerr":0,"x":430,"y":80,"wires":[["20313a28.a3802e"]]},{"id":"5366c980.58b88","type":"http in","z":"59ab95b7.f411fc","name":"","url":"/css/:file","method":"get","upload":false,"swaggerDoc":"","x":150,"y":120,"wires":[["d729bf10.b89748"]]},{"id":"ddf2edce.439e2","type":"http response","z":"59ab95b7.f411fc","name":"","statusCode":"","headers":{"Content-Type":"text/css"},"x":830,"y":120,"wires":[]},{"id":"c8ce32e7.d87d18","type":"file in","z":"59ab95b7.f411fc","name":"","filename":"","format":"utf8","chunk":false,"sendError":false,"encoding":"none","x":630,"y":120,"wires":[["ddf2edce.439e2"]]},{"id":"d729bf10.b89748","type":"function","z":"59ab95b7.f411fc","name":"css file","func":"msg.filename = 'datasets/floppyBirds/css/' + msg.req.params.file;\nreturn msg;","outputs":1,"noerr":0,"x":410,"y":120,"wires":[["c8ce32e7.d87d18"]]},{"id":"8b903c07.e91688","type":"http in","z":"59ab95b7.f411fc","name":"","url":"/assets/:file","method":"get","upload":false,"swaggerDoc":"","x":160,"y":160,"wires":[["45cf42c.dc1733c"]]},{"id":"ff6d5f1f.08d138","type":"http response","z":"59ab95b7.f411fc","name":"","statusCode":"","headers":{"Content-Type":"image/png"},"x":830,"y":160,"wires":[]},{"id":"70025f5e.d86e7","type":"file in","z":"59ab95b7.f411fc","name":"","filename":"","format":"","chunk":false,"sendError":false,"encoding":"none","x":630,"y":160,"wires":[["ff6d5f1f.08d138"]]},{"id":"45cf42c.dc1733c","type":"function","z":"59ab95b7.f411fc","name":"assets file","func":"msg.filename = 'datasets/floppyBirds/assets/' + msg.req.params.file;\nreturn msg;","outputs":1,"noerr":0,"x":420,"y":160,"wires":[["70025f5e.d86e7"]]},{"id":"df289e13.d24b08","type":"http in","z":"59ab95b7.f411fc","name":"","url":"/assets/sounds/:file","method":"get","upload":false,"swaggerDoc":"","x":180,"y":200,"wires":[["42d69fda.1eeca8"]]},{"id":"c795f7ca.2a9c18","type":"http response","z":"59ab95b7.f411fc","name":"","statusCode":"","headers":{},"x":830,"y":200,"wires":[]},{"id":"f122b8af.293738","type":"file in","z":"59ab95b7.f411fc","name":"","filename":"","format":"","chunk":false,"sendError":false,"encoding":"none","x":630,"y":200,"wires":[["c795f7ca.2a9c18"]]},{"id":"42d69fda.1eeca8","type":"function","z":"59ab95b7.f411fc","name":"sounds file","func":"msg.filename = 'datasets/floppyBirds/assets/sounds/' + msg.req.params.file;\nreturn msg;","outputs":1,"noerr":0,"x":430,"y":200,"wires":[["f122b8af.293738"]]},{"id":"69c51bce.d5b434","type":"ui_template","z":"59ab95b7.f411fc","group":"84c14880.1718d8","name":"","order":0,"width":0,"height":0,"format":"<div>\n    <ul>\n        <li ng-repeat=\"model in msg.payload\">\n            <a ng-init=\"modelid=model.replace('models/flappy', '')\"ng-href=\"/reinforcement?model={{modelid}}\">{{modelid}}</a>\n        </li>\n    </ul>\n</div>","storeOutMessages":true,"fwdInMessages":true,"templateScope":"local","x":660,"y":380,"wires":[[]]},{"id":"126e21a0.3bd5fe","type":"inject","z":"59ab95b7.f411fc","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":140,"y":380,"wires":[["8f78ff49.695b18"]]},{"id":"8f78ff49.695b18","type":"glob","z":"59ab95b7.f411fc","name":"List models","pattern":"models/flappy*","oneMsgPerMatch":"","x":450,"y":380,"wires":[["69c51bce.d5b434","4abfdef9.e3d51"]]},{"id":"4abfdef9.e3d51","type":"debug","z":"59ab95b7.f411fc","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":670,"y":440,"wires":[]},{"id":"fd0b98e3.d61168","type":"http in","z":"59ab95b7.f411fc","name":"","url":"/models/:modelid","method":"post","upload":false,"swaggerDoc":"","x":180,"y":320,"wires":[["ca27414b.8e6708","8f78ff49.695b18"]]},{"id":"37e3b87f.51af78","type":"file","z":"59ab95b7.f411fc","name":"","filename":"","appendNewline":true,"createDir":true,"overwriteFile":"true","encoding":"none","x":630,"y":320,"wires":[["cfb5dcc7.7e83e8"]]},{"id":"ca27414b.8e6708","type":"function","z":"59ab95b7.f411fc","name":"Models filename","func":"msg.filename = 'models/flappy' + msg.req.params.modelid;\nreturn msg;","outputs":1,"noerr":0,"x":440,"y":320,"wires":[["37e3b87f.51af78"]]},{"id":"cfb5dcc7.7e83e8","type":"http response","z":"59ab95b7.f411fc","name":"","statusCode":"","headers":{},"x":830,"y":320,"wires":[]},{"id":"dec3af2a.b8f6c8","type":"http in","z":"59ab95b7.f411fc","name":"","url":"/models/:modelid","method":"get","upload":false,"swaggerDoc":"","x":180,"y":280,"wires":[["6a06c510.a9b65c"]]},{"id":"6a06c510.a9b65c","type":"function","z":"59ab95b7.f411fc","name":"Models filename","func":"msg.filename = 'models/flappy' + msg.req.params.modelid;\nreturn msg;","outputs":1,"noerr":0,"x":440,"y":280,"wires":[["2a1dc426.585234"]]},{"id":"1dbe35e7.76a022","type":"http response","z":"59ab95b7.f411fc","name":"","statusCode":"","headers":{},"x":830,"y":280,"wires":[]},{"id":"2a1dc426.585234","type":"file in","z":"59ab95b7.f411fc","name":"","filename":"","format":"utf8","chunk":false,"sendError":false,"encoding":"none","x":630,"y":280,"wires":[["1dbe35e7.76a022"]]}]